<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>sdk视频对接服务概要</title>
    <url>/2019/06/genee-backend-vidmonserver/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="8c44f218b5e4ca90120e1309f61f8ad0dffa1629c3a70e4fe90134d7a11983f4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Backend Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>Backend</tag>
        <tag>hikvision</tag>
        <tag>NodeJS</tag>
        <tag>微服务</tag>
      </tags>
  </entry>
  <entry>
    <title>海康门禁使用手册</title>
    <url>/2019/05/genee-field-engineer-hikdoor-install/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="7fde429809bd83ad36766c1ce26325c198ca794b73ac645f0f38eb97cfe4276c"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Field Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>hikvision</tag>
        <tag>门禁</tag>
        <tag>对接</tag>
      </tags>
  </entry>
  <entry>
    <title>视频监控流媒体现场排查指南</title>
    <url>/2020/09/genee-field-engineer-rtsp/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="3ebcdfb793cae18e9677d92be260ce3fea1948077670f51faba5c966a105d7db"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Field Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>hikvision</tag>
        <tag>对接</tag>
        <tag>流媒体</tag>
        <tag>rtsp</tag>
      </tags>
  </entry>
  <entry>
    <title>数字化校园对接工作说明</title>
    <url>/2020/09/genee-field-engineer-sso/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="1561f037579bf033618c861966a64b4ac417352f35b27e30be973edceb540890"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Field Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>对接</tag>
      </tags>
  </entry>
  <entry>
    <title>海康门禁部署文档</title>
    <url>/2019/05/genee-field-engineer-hikdoor/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="490fe0e5e9fab7849211e9b30bb21cce07c8f0ba08e1fcd08decfa0ae0bf8c3d">5ba310fc95b78dd3e9bc52c7b8911caa19e2fcfecd523620d0df58e82e7d6327ece25a15942720bf96a21f4494995c73cbc562aa5f33a23b4ea839e04b3dcfb00ffefdd7b8b3a0162844a8f9c78fc61c0127dfac84afcb2080789652ef1eaa6cfc169766a221a70fc1c800ad239afca576024b16dfb38f67ae361bea95414570e567e1e8115308c4af42054a41cfba6cc9ccd58d2dcbacea4d23e439ff0e1291384d660db07ea4aa572b74ac091e676937783e9a8cd568bb196be15e9e423156c2573ed92a62b1fc7819ea1b3cff362ba34039966c39bdb0d74a95a8c0681c2e7c04300cce2aa658674be6950943ba336d2e25746ab9d72692b55a2fb8b5795ab0dd6b602d65518e82e07d62fb3befd3f194162b421fa1d280151357e6b5dea879f6b8e72635b05d92b8c8d5d0eca5f022911bbfa6d53f12ca47aae4a91de1d93a65a9a88a61f7f3066222e07616e3ac740f146be1f64215d1d0b035da8aac55de999fd990e40cb1a88d3fa9f92ddd9f4a8ab808b2b87c1e107a284b55da9c61583f8cb3da200fa25d328c8dc4bf45f4b87322125451430ace0f2ad16685d51a63e01c9485dd34791a5596b60c250d9e2d8468b928caef1bb0ed2b18671f61bbc7767d3ffa90e7b098152d4593dfb9a1203f2e28b1ddb943ceccd6e857f73591c862e24002e4bf6a1d8d7d2699b97ca7a97b185fab3104460122885860fba53f483c441ce515ea3e6c4c68a281044ab6791ebf20c6f7083edb94cbd492f8fdacab1806e248879ecafcc056844ba85e8ea7f9f671fc6da39ade6aeaefe3cfb046acc865fa6ed069c24999cf427a016c550f7188e370aeea01b65510c70aa93816dc3fd4ee1adb4aec89c3b3997f81f55cf768aaa78b1d074502034ad7da9ce51274d0033ab20c4cfdbdca6d9acb3ff70b34f474c23f245c1f49ccdaab70ec9cb2a4fecf5f37248441a20d64573455ed8a0ac5799d796aeffc6278ba22f36d4632e9ac30659029a6810f9476546e48bd0493462fb17644b168fc3b07922507303306a145f9dc0fe6ed9836c681453e1ca00705e6a0ba6281e66455d6ea854d7ea23d63069726a784eafa3afd063ce672e088b7732c51c2dbcaab07b3bcc6c3632863835961fb371f9ec288035dab28dd439dbd615028b599f8d2bfce2fc5c3f49571f00feb5f94dbc06061bb0e2f68464229e9cf936d922b0ae2267ebb47f1c9d6cfbcbbd1e800d67675f468e3fec6515212b667510ba0df07499065079d276f22c50ffbdd13a321bd6e237c9e681f04447b42ecd3b390ff5b64e0a5a8358898e5b99ae8712c123e730975314f59ab6e5b45779b36e1e99d6cbda1e79ab66de23e2b1012e81c6259949f76021a22446098b0c8c77ddd67cc4e81945478a2d98b55e96d8512e058708596a6319665c7e5683565192bdf2416cbc54d8262f70b5617624bd634d79c682f03b9ddd40c7dd61af3d721c15c19239c3d8f3ebb81066de1fe641c1f55ef484778d8f8da6ccb1d09863469f455a7533087b606118b12e906d672f472653b9dbee5b8b7e0ce2ff87d23920a966004a458533349a0b4b4ac38f493ceaee4c1ef4d91f089279b14603fb7c17ca0777dcf00e1171b5493727c5bd2042337944e211a02d867ef945fcd9b23b7c4d9ce6ef4f50a6ae830689485cbde389d8d0cca9bb546e698246af0d40d6bde6b71c28460f22fbb8ddbdcb9baa04abfff14df42c9b8ea283ec0dc37a2500ec13b5cef4e67e995aaf47c5ae8d0dcd1f94295b15a8cc3f6445f571b208a9e5cab1637fcc98846c9729157f44c60ba8a6befcaa168431487f3849effb23e049bdf0d5aba3abc06b8d3393576705ddadcfb2734c1217f7934f424e5328ccaeb5b6d8fbad8592380163c2fc159e64c0985498d45d75f506f348793def349982197871910df2c96aa8f45a9bd4a6c549e721ab93b25204d2c4ea50b36ee6cbd13451369ea773052b1221cf60805dac5bdb02a736a47ea8de69e96b4f8acf737596e433d63627298f91236f30ebba44dd1cf332972418d1f4301a9080d06c4d7668fba80fd5db1b6241147b3c5ab9629fd6bbce2e3e41903f2dcd3f7856e218ff4c53f71ae04c1096782cd1946933235ad07b35099fd3174362ada9e79e21da4e9333d05903b145dd1be1ba901aa240acbb64d07ed60cdc5fd1566e8efae0002e01097c2b2cc32cf33b8a03422ada16e374086752d1f7016364671225e6f6bf1419bad6518507ffea46e0abc574e2da75468e510325eb4160b1e2426e738f6197ad16eea6314c980a7b031a08ff85332ef852cf54fe9b27e4db9402077bdf91784a3db4a1a1e45dad2949d8cc2b89a8fb034c76baf676e069db34deada67df660cbaa8deaeccbab4798418b8dd2a33a83185d8bb3f3a03e698aaa2a9f4132d086ae32a90125d8e8e7fdd2205d0fafac08665e507f22a26e561b602be7743b9973d8e3e39502ae76f2cda41f12771865734b5c6ba8a2e46591194e5f1fcf4fb6d8fc2e8f7ec9f089cc72d8748411e633b73a4d725f20b34dfaa38f0f81563f54d21b7343d5d21bfb41fe5e5aa949131626bdb31b2439bf1a7dae95940d0213b0db223b487dc15e86f27864efb3e85cdbad5272523da5b102c91b57031ccc3a8db4e3d3d6bf0569550dcad91d4bd0efb8c049f4507cff7c499beba6d5af2e0829da6ad963a0fa45c26c69b0820bcc27cbd23305070d23a60a831a59ffa9bf9482dacef51875292c52b5d76c7380b575b0491728583f5d81b4e56d9be353aa712736a3d99c23a038d92b5af0a74a9f5dc787f4a71424a30df5ec407487690376dde512fd80b74631cf6120716393e20321f70e74554842beb77b5806db54443a5eccaa1826aaa4e4e97cbbb9902c7bd05b54227a4ee6e841f10949eef0077aeb4b5237e83cba8f6e972cd8b55d07ebbf15419d38a8b6c05e298abc30a6df9a1148f91d0a3605ae99772a7801cdbdf2f41ad3a5739fbc4ebc33d326084228631656096fb9fc8371a345edde46a029702331bc63c2d9c71cf65f68812995212440f198a312a6a71128f9f88804a40fb6facf989</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Field Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>hikvision</tag>
        <tag>门禁</tag>
        <tag>对接</tag>
      </tags>
  </entry>
  <entry>
    <title>GPUI框架入门</title>
    <url>/2020/08/genee-front-engineer-gpui/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="4e91b50caac742cf646794bf0145bc6b33b3bc4280c5b934af0a1462393c4826"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Frontend Engineer</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>tutor</tag>
        <tag>Frontend</tag>
        <tag>JavaScript</tag>
        <tag>Electron</tag>
        <tag>React Native</tag>
      </tags>
  </entry>
  <entry>
    <title>算法图解</title>
    <url>/2020/07/learn-grokking-algorithms/</url>
    <content><![CDATA[<h2 id="算法简介"><a href="#算法简介" class="headerlink" title="算法简介"></a>算法简介</h2><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><h3 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h3><blockquote>
<p>O(log2 n)</p>
</blockquote>
<h3 id="大O表示法"><a href="#大O表示法" class="headerlink" title="大O表示法"></a>大O表示法</h3><ul>
<li>O(log2 n) 对数时间 二分查找</li>
<li>O(n) 线性时间 简单查找</li>
<li>O(n * log2 n) 快排</li>
<li>O(n^2) 选择排序</li>
<li>O(n!) 旅行商问题<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3></li>
<li>二分查找比简单查找快的多</li>
<li>O(log2 n) 比O(n)快</li>
<li>算法运行时间不已秒为单位</li>
<li>算法运行时间是从其增速角度度量的</li>
<li>算法运行时间用大O表示法表示</li>
</ul>
<h2 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h2><h3 id="内存工作原理"><a href="#内存工作原理" class="headerlink" title="内存工作原理"></a>内存工作原理</h3><h3 id="数组和链表"><a href="#数组和链表" class="headerlink" title="数组和链表"></a>数组和链表</h3><h3 id="选择排序-1"><a href="#选择排序-1" class="headerlink" title="选择排序"></a>选择排序</h3><ul>
<li>O(n^2)<h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3></li>
<li>计算机内存犹如一大堆抽屉</li>
<li>存储多个元素时, 可选择数组或链表</li>
<li>所有的元素都在一起</li>
<li>链表的元素是分开的, 每个元素存储了下一个元素的地址</li>
<li>数组的读取速度很快</li>
<li>链表的插入和删除速度很快</li>
<li>同一个数组中, 所有元素类型必须相同</li>
</ul>
<h2 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h2><h3 id="递归-1"><a href="#递归-1" class="headerlink" title="递归"></a>递归</h3><h3 id="基线条件和递归条件"><a href="#基线条件和递归条件" class="headerlink" title="基线条件和递归条件"></a>基线条件和递归条件</h3><blockquote>
<p>每个递归函数都有两部分: 基线条件(函数不再调用自己)和递归条件(函数调用自己)</p>
</blockquote>
<h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><blockquote>
<p>调用另一个函数时, 当前函数暂停并处于未完成状态. 该函数的所有变量的值都还在内存中</p>
</blockquote>
<ul>
<li>递归栈 存储详尽的信息需要大量内存, 每个函数调用都要占用一定的内存.<ul>
<li>重新编写代码 转而使用循环</li>
<li><strong>使用尾递归</strong></li>
</ul>
</li>
</ul>
<h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><ul>
<li>递归指的是调用自己的函数</li>
<li>每个递归函数都要两个条件 基线条件和递归条件</li>
<li>栈的两种操作: 压入和弹出</li>
<li>所有函数调用都进入调用栈</li>
<li>调用栈可能很长这将占用大量内存</li>
</ul>
<h2 id="快速排序"><a href="#快速排序" class="headerlink" title="快速排序"></a>快速排序</h2><h3 id="分而治之D-amp-C"><a href="#分而治之D-amp-C" class="headerlink" title="分而治之D&amp;C"></a>分而治之D&amp;C</h3><h3 id="快速排序-1"><a href="#快速排序-1" class="headerlink" title="快速排序"></a>快速排序</h3><h3 id="再谈大O表示法"><a href="#再谈大O表示法" class="headerlink" title="再谈大O表示法"></a>再谈大O表示法</h3><ul>
<li>平均情况</li>
<li>最糟情况<blockquote>
<p>快速排序, 平均(最佳)情况 有O(log2 n)层, 最差情况有O(n)层, 每一层均需处理n个元素, O(n) 即<strong>快排最差情况O(n^2), 平均情况O(log2n)</strong></p>
</blockquote>
</li>
</ul>
<h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><ul>
<li>D&amp;C将问题逐步分解. 处理问题时, 基线条件很可能是空数组或只包含1个元素的数组</li>
<li>实现快速排序, 随机选用基准值元素, 平均时间为O(n * log2 n)</li>
<li>大O表示法中常量有时候事关重大, e.g. 快速排序O(n * log2 n)快于合并排序O(n * log2 n)</li>
<li>比较简单查找和二分查找时, 常量无关, 因为列表很长时O(log2 n) 比 O(n)快得多</li>
</ul>
<h2 id="散列表"><a href="#散列表" class="headerlink" title="散列表"></a>散列表</h2><h3 id="散列函数"><a href="#散列函数" class="headerlink" title="散列函数"></a>散列函数</h3><ul>
<li>一致性</li>
<li>不同输入映射到不同数字<blockquote>
<p>包含额外逻辑的数据结构</p>
</blockquote>
</li>
</ul>
<h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><ul>
<li>小结(适用于)<ul>
<li>仿真映射关系</li>
<li>防止重复(每人仅投一票例子)</li>
<li>缓存</li>
</ul>
</li>
</ul>
<h3 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h3><blockquote>
<p>不同输入映射到同输出情况, 常见解决方式是输出位置保存链表</p>
</blockquote>
<ul>
<li>散列函数很重要, 理想情况是,将键均匀映射到散列表不同位置</li>
<li>散列表存储的链表很长, 散列表速度将急剧下降(散列函数好, 链表不会很长)</li>
</ul>
<h3 id="性能"><a href="#性能" class="headerlink" title="性能"></a>性能</h3><ul>
<li>避免冲突<ul>
<li>较低的填装因子(数组中被占用的位置数)</li>
<li>较好的散列函数</li>
</ul>
</li>
</ul>
<h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><ul>
<li>结合散列函数 和 数组 创建散列表</li>
<li>使用最大限度减少冲突的散列函数</li>
<li>查, 插, 删速度都非常快</li>
<li>散列表适用于仿真映射</li>
<li>装填因子大于0.7, 调整散列表长度</li>
<li>用于缓存</li>
<li>适合用于防止重复</li>
</ul>
<h2 id="广度优先搜索"><a href="#广度优先搜索" class="headerlink" title="广度优先搜索"></a>广度优先搜索</h2><h3 id="图简介"><a href="#图简介" class="headerlink" title="图简介"></a>图简介</h3><h3 id="图是什么"><a href="#图是什么" class="headerlink" title="图是什么"></a>图是什么</h3><h3 id="广度优先搜索-1"><a href="#广度优先搜索-1" class="headerlink" title="广度优先搜索"></a>广度优先搜索</h3><blockquote>
<p>找到的不仅是A到B的路径, 而且是最短路径</p>
</blockquote>
<ul>
<li>队列</li>
</ul>
<h3 id="实现图"><a href="#实现图" class="headerlink" title="实现图"></a>实现图</h3><blockquote>
<p>散列表实现图(由多个节点, 且与临近节点相连)</p>
</blockquote>
<ul>
<li>有向图 &amp; 无向图</li>
</ul>
<h3 id="实现算法"><a href="#实现算法" class="headerlink" title="实现算法"></a>实现算法</h3><ul>
<li>运行时间O(V+E) 人数+边数</li>
<li><strong>拓扑排序</strong>(列表有序), 根据图创建有序列表</li>
<li>树</li>
</ul>
<h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><ul>
<li>广度优先搜索指出是否有A到B的路径</li>
<li>广度优先搜索指出A到B的最短路径(若有)</li>
<li>面临类似寻找最短路径问题, 使用图创建模型, 再用广度优先搜索解决问题</li>
<li>有向图边为箭头, 指定关系的方向</li>
<li>无向图边不带箭头, 关系双向</li>
<li>队列FIFO</li>
<li>栈LIFO</li>
<li>需要按加入顺序检查搜索列表的人, 否则找到的不是最短路径, 故使用队列</li>
<li>经过检查的人不再次检查, 否则导致无限循环</li>
</ul>
<h2 id="Dijkstra"><a href="#Dijkstra" class="headerlink" title="Dijkstra"></a>Dijkstra</h2><h3 id="使用狄克斯特拉算法"><a href="#使用狄克斯特拉算法" class="headerlink" title="使用狄克斯特拉算法"></a>使用狄克斯特拉算法</h3><h3 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h3><ul>
<li>权重</li>
<li>只适用于DAG 有向无环图<h3 id="换钢琴"><a href="#换钢琴" class="headerlink" title="换钢琴"></a>换钢琴</h3></li>
<li>找出开销最低节点, 并更新其邻居开销<h3 id="负权边"><a href="#负权边" class="headerlink" title="负权边"></a>负权边</h3></li>
<li>不可使用Dijkstra, 原因: 已处理过的节点有可能被更新开销<h3 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h3></li>
<li>Graph{Hash Table}</li>
<li>Cost{Hash Table}</li>
<li>Parent{Hash Table}</li>
<li>Processed[]</li>
</ul>
<h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><ul>
<li>广度优先搜索用于非加权图查找最短路径</li>
<li>狄克斯特拉  用于加权图中查找最短路径</li>
<li>仅当权重为正, Dijkstra才管用, 否则使用贝尔曼-福特算法</li>
</ul>
<h2 id="贪婪算法"><a href="#贪婪算法" class="headerlink" title="贪婪算法"></a>贪婪算法</h2><h3 id="教室调度问题"><a href="#教室调度问题" class="headerlink" title="教室调度问题"></a>教室调度问题</h3><blockquote>
<p>每步选择局部最优解, 最终得到的就是全局最优解</p>
</blockquote>
<h3 id="背包问题"><a href="#背包问题" class="headerlink" title="背包问题"></a>背包问题</h3><blockquote>
<p>贪婪策略不能获得最优解, 但非常接近</p>
</blockquote>
<h3 id="集合覆盖问题"><a href="#集合覆盖问题" class="headerlink" title="集合覆盖问题"></a>集合覆盖问题</h3><h3 id="NP完全问题"><a href="#NP完全问题" class="headerlink" title="NP完全问题"></a>NP完全问题</h3><ul>
<li>e.g. 旅行商问题</li>
<li>识别<ul>
<li>元素少运行速度快, 随着元素增加, 速度慢</li>
<li>涉及所有组合的问题, 通常是NP完全问题</li>
<li>不能将问题分成小问题, 必须考虑各种可能情况, 可能是NP完全问题</li>
<li>涉及序列且难以解决, 可能是NP完全问题</li>
<li>涉及集合且难以解决, 可能是NP完全问题</li>
<li>问题可转换成集合问题或旅行商问题, 肯定是NP完全问题</li>
</ul>
</li>
</ul>
<h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><ul>
<li>贪婪算法寻找局部最优解, 企图以这种方式获得全部最优解</li>
<li>NP完全问题没有找到快速解决方案</li>
<li>面临NP完全问题, 最佳做法为近似算法</li>
<li>贪婪算法易于实现, 运算速度快, 是不错的近似算法</li>
</ul>
<h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><h3 id="背包问题-1"><a href="#背包问题-1" class="headerlink" title="背包问题"></a>背包问题</h3><ul>
<li>比较更大价值<ul>
<li>Cell[i-1][j]</li>
<li>当前商品价值 + Cell[i-1][j-当前商品重量]</li>
</ul>
</li>
</ul>
<h3 id="背包问题FAQ"><a href="#背包问题FAQ" class="headerlink" title="背包问题FAQ"></a>背包问题FAQ</h3><ul>
<li>在增加一种样品</li>
<li>行的顺序变化, 结果不变化</li>
<li>仅当每个问题离散, 动态规划才管用, 不然没法建模</li>
</ul>
<h3 id="最长公共子串"><a href="#最长公共子串" class="headerlink" title="最长公共子串"></a>最长公共子串</h3><ul>
<li>动态规划在给定的约束条件下找到最优解</li>
<li>可被分解独立且离散的子问题, 可使用动态规划解决</li>
<li>每种动态规划都涉及网格</li>
<li>单元格中的值, 即是要优化的值</li>
<li>每个单元格都是子问题, 考虑将问题分成子问题, 有助于找出网格坐标轴</li>
<li>e.g 最长公共子串(hish vs fish or vista) 最长公共子序列 (fosh vs fort or fish )</li>
</ul>
<h2 id="K临近算法"><a href="#K临近算法" class="headerlink" title="K临近算法"></a>K临近算法</h2><ul>
<li>K临近算法创建分类系统</li>
<li>学习特征抽取</li>
<li>学习回归, 预测数值</li>
<li>K临近算法的应用案例和局限性</li>
</ul>
<h3 id="橙子还是柚子"><a href="#橙子还是柚子" class="headerlink" title="橙子还是柚子"></a>橙子还是柚子</h3><blockquote>
<p>创建推荐系统</p>
</blockquote>
<h3 id="创建推荐系统"><a href="#创建推荐系统" class="headerlink" title="创建推荐系统"></a>创建推荐系统</h3><ul>
<li>KNN 两项基本工作 分类和回归(预测结果)</li>
<li>计算距离除了距离公式, 使用<strong>余弦相似度</strong></li>
<li>如果有N位用户, 应考虑sqrt(N)个邻居. </li>
</ul>
<h3 id="机器学习简介"><a href="#机器学习简介" class="headerlink" title="机器学习简介"></a>机器学习简介</h3><ul>
<li>OCR 光学字符识别</li>
</ul>
<h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><ul>
<li>KNN用于分类和回归, 考虑最近的邻居</li>
<li>分类就是编组</li>
<li>回归就是预测数字</li>
<li>特征抽取意味着将物品转化为数字</li>
<li>是否挑选合适的特征事关成败</li>
</ul>
<h2 id="接下来如何做"><a href="#接下来如何做" class="headerlink" title="接下来如何做"></a>接下来如何做</h2><h3 id="树"><a href="#树" class="headerlink" title="树"></a>树</h3><ul>
<li>二叉查找树<ul>
<li>查询, 平均O(log2 n), 最差O(n)</li>
<li>插入, 删除, O(log2 n)</li>
<li>缺点: 不能随机访问</li>
</ul>
</li>
<li><strong>B树, 红黑树, 堆, 伸展树</strong></li>
</ul>
<h3 id="反向索引"><a href="#反向索引" class="headerlink" title="反向索引"></a>反向索引</h3><ul>
<li>搜索引擎</li>
</ul>
<h3 id="傅里叶变换"><a href="#傅里叶变换" class="headerlink" title="傅里叶变换"></a>傅里叶变换</h3><h3 id="并行算法"><a href="#并行算法" class="headerlink" title="并行算法"></a>并行算法</h3><ul>
<li>并行速度提升并非线性<ul>
<li>开销</li>
<li>负载均衡<h3 id="MapReduce"><a href="#MapReduce" class="headerlink" title="MapReduce"></a>MapReduce</h3></li>
</ul>
</li>
<li>流行的分布式算法<h3 id="布隆过滤器和HyperLogLog"><a href="#布隆过滤器和HyperLogLog" class="headerlink" title="布隆过滤器和HyperLogLog"></a>布隆过滤器和HyperLogLog</h3><blockquote>
<p>海量数据的创意解决方案</p>
</blockquote>
</li>
<li>概率性算法</li>
</ul>
<h3 id="SHA算法"><a href="#SHA算法" class="headerlink" title="SHA算法"></a>SHA算法</h3><ul>
<li>安全散列算法</li>
</ul>
<h3 id="局部敏感的散列算法"><a href="#局部敏感的散列算法" class="headerlink" title="局部敏感的散列算法"></a>局部敏感的散列算法</h3><ul>
<li>Simhash</li>
</ul>
<h3 id="Diffie-Hellman密钥交换"><a href="#Diffie-Hellman密钥交换" class="headerlink" title="Diffie-Hellman密钥交换"></a>Diffie-Hellman密钥交换</h3><ul>
<li>公私钥, 替代者RSA</li>
</ul>
<h3 id="线性规划"><a href="#线性规划" class="headerlink" title="线性规划"></a>线性规划</h3><ul>
<li><strong>Simplex算法</strong></li>
</ul>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://www.amazon.cn/dp/B075SWP6LG/ref=pd_vtp_351_4/462-1146991-5684113?_encoding=UTF8&pd_rd_i=B075SWP6LG&pd_rd_r=d222fffd-e59c-4e66-8a61-9807c70256c4&pd_rd_w=5J8cj&pd_rd_wg=m6NtB&pf_rd_p=c96463ae-5f19-4171-bef2-93ab273f1bae&pf_rd_r=F3YGJ146CZ26AHV6RTJS&psc=1&refRID=F3YGJ146CZ26AHV6RTJS">算法图解</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>Frontend</tag>
        <tag>学习笔记</tag>
        <tag>读书笔记</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>图解HTTP</title>
    <url>/2020/08/learn-http/</url>
    <content><![CDATA[<h2 id="了解web及网络基础"><a href="#了解web及网络基础" class="headerlink" title="了解web及网络基础"></a>了解web及网络基础</h2><h3 id="使用HTTP访问Web"><a href="#使用HTTP访问Web" class="headerlink" title="使用HTTP访问Web"></a>使用HTTP访问Web</h3><blockquote>
<p>根据URL, 浏览器从服务器获取文件资源<br>HTTP 超文本传输协议</p>
</blockquote>
<h3 id="HTTP的诞生"><a href="#HTTP的诞生" class="headerlink" title="HTTP的诞生"></a>HTTP的诞生</h3><ul>
<li>WWW构建技术: HTML, HTTP, URL</li>
</ul>
<h3 id="网络基础TCP-IP"><a href="#网络基础TCP-IP" class="headerlink" title="网络基础TCP/IP"></a>网络基础TCP/IP</h3><p>TCP/IP 协议族, HTTP属于其子集</p>
<ul>
<li>应用层（HTTP, FTP, DNS）, 传输层（TCP&amp;UDP协议, 端口）, 网络层（IP）, 数据链路层（硬件部分）</li>
</ul>
<h3 id="IP-TCP-DNS"><a href="#IP-TCP-DNS" class="headerlink" title="IP, TCP, DNS"></a>IP, TCP, DNS</h3><ul>
<li>APR协议, 解析IP地址反查MAC地址</li>
<li>TCP提供可靠的字节流服务, 三次握手SYN, ACK</li>
<li>DNS通过域名反查IP地址</li>
</ul>
<h3 id="各协议与HTTP的关系"><a href="#各协议与HTTP的关系" class="headerlink" title="各协议与HTTP的关系"></a>各协议与HTTP的关系</h3><ul>
<li>URL-&gt;DNS-&gt;HTTP报文-&gt;TCP可靠传输报文段-&gt;IP搜索地址并传送-&gt;TCP重组-&gt;HTTP内容处理-&gt;返回</li>
</ul>
<h3 id="URI和URL"><a href="#URI和URL" class="headerlink" title="URI和URL"></a>URI和URL</h3><ul>
<li>URI统一资源标识符（URL统一资源定位）</li>
<li>格式: 协议方案名, 登录信息, 服务器地址, 端口号, 带层次的文件路径, 查询字符串, 片段标识符</li>
</ul>
<h2 id="简单的HTTP协议"><a href="#简单的HTTP协议" class="headerlink" title="简单的HTTP协议"></a>简单的HTTP协议</h2><h3 id="用于客户端和服务端通信"><a href="#用于客户端和服务端通信" class="headerlink" title="用于客户端和服务端通信"></a>用于客户端和服务端通信</h3><p>一条通信线路上, 服务端, 客户端角色确定</p>
<h3 id="通过请求和响应交换达成通信"><a href="#通过请求和响应交换达成通信" class="headerlink" title="通过请求和响应交换达成通信"></a>通过请求和响应交换达成通信</h3><ul>
<li>请求报文: 请求方法, 请求URI, 协议版本, 可选的请求首部字段, 内容实体</li>
<li>响应报文: 协议版本, 状态码, 原因短语, 响应时间, 可选的响应首部字段, 实体</li>
</ul>
<h3 id="HTTP是不保存状态的协议"><a href="#HTTP是不保存状态的协议" class="headerlink" title="HTTP是不保存状态的协议"></a>HTTP是不保存状态的协议</h3><h3 id="请求URI定位资源"><a href="#请求URI定位资源" class="headerlink" title="请求URI定位资源"></a>请求URI定位资源</h3><h3 id="告知服务器意图的HTTP方法"><a href="#告知服务器意图的HTTP方法" class="headerlink" title="告知服务器意图的HTTP方法"></a>告知服务器意图的HTTP方法</h3><ul>
<li>GET 获取资源</li>
<li>POST 传输实体主体</li>
<li>PUR 传输文件</li>
<li>HEAD 获得报文首部</li>
<li>DELETE 删除文件</li>
<li>OPTIONS 询问支持的方法</li>
<li>TRACE 追踪路径</li>
<li>CONNECT 要求用隧道协议连接代理</li>
</ul>
<h3 id="使用方法下达命令"><a href="#使用方法下达命令" class="headerlink" title="使用方法下达命令"></a>使用方法下达命令</h3><h3 id="持久连接节省通信量"><a href="#持久连接节省通信量" class="headerlink" title="持久连接节省通信量"></a>持久连接节省通信量</h3><ul>
<li>keep-alive 任意端没有明确提出断开连接, 保持TCP状态</li>
<li>管线化: 并行发送多个请求</li>
</ul>
<h3 id="使用Cookie的状态管理"><a href="#使用Cookie的状态管理" class="headerlink" title="使用Cookie的状态管理"></a>使用Cookie的状态管理</h3><h2 id="HTTP报文内的HTTP信息"><a href="#HTTP报文内的HTTP信息" class="headerlink" title="HTTP报文内的HTTP信息"></a>HTTP报文内的HTTP信息</h2><h3 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h3><p>多行数据构成的字符串文本, CR+LF做换行符</p>
<h3 id="请求报文和响应报文的结构"><a href="#请求报文和响应报文的结构" class="headerlink" title="请求报文和响应报文的结构"></a>请求报文和响应报文的结构</h3><h3 id="编码提升传输速率"><a href="#编码提升传输速率" class="headerlink" title="编码提升传输速率"></a>编码提升传输速率</h3><h3 id="发送多种数据的多部分对象集合"><a href="#发送多种数据的多部分对象集合" class="headerlink" title="发送多种数据的多部分对象集合"></a>发送多种数据的多部分对象集合</h3><ul>
<li>MIME 多用途因特网邮件扩展</li>
<li>HTTP的多部分对象:<ul>
<li>multipart/form-data</li>
<li>multipart/byteranges</li>
</ul>
</li>
<li>使用需要在首部加上Content-Type</li>
</ul>
<h3 id="获取部分内容的范围请求"><a href="#获取部分内容的范围请求" class="headerlink" title="获取部分内容的范围请求"></a>获取部分内容的范围请求</h3><h3 id="内容协商返回最合适的内容"><a href="#内容协商返回最合适的内容" class="headerlink" title="内容协商返回最合适的内容"></a>内容协商返回最合适的内容</h3><ul>
<li>首部字段<ul>
<li>Accept</li>
<li>Accept-Charset</li>
<li>Accept-Encoding</li>
<li>Accept-Language</li>
<li>Content-Language</li>
</ul>
</li>
</ul>
<h2 id="返回结果的HTTP状态码"><a href="#返回结果的HTTP状态码" class="headerlink" title="返回结果的HTTP状态码"></a>返回结果的HTTP状态码</h2><h3 id="状态码告知服务器返回的请求结果"><a href="#状态码告知服务器返回的请求结果" class="headerlink" title="状态码告知服务器返回的请求结果"></a>状态码告知服务器返回的请求结果</h3><h3 id="2XX"><a href="#2XX" class="headerlink" title="2XX"></a>2XX</h3><ul>
<li>200 OK</li>
<li>204 No Content(不含实体主体)</li>
<li>206 Partial Content(响应范围请求)</li>
</ul>
<h3 id="3XX"><a href="#3XX" class="headerlink" title="3XX"></a>3XX</h3><ul>
<li>301 Moved Permanently 永久重定向</li>
<li>302 Found 临时重定向（禁止POST变换GET, 但不一定遵守）</li>
<li>303 See Other 与302功能相同, 明确表示客户端应采用GET获取资源</li>
<li>304 Not Modified 资源未改变</li>
<li>307 Temporary Redirect 临时重定向同302, 禁止POST变换GET</li>
</ul>
<h3 id="4XX"><a href="#4XX" class="headerlink" title="4XX"></a>4XX</h3><ul>
<li>400 Bad Request 报文存在语法错误</li>
<li>401 Unauthorized 需要HTTP认证（BASIC, <strong>DIGEST认证</strong>）</li>
<li>403 Forbidden 拒绝</li>
<li>404 Not Found 未找到</li>
</ul>
<h3 id="5XX-服务器错误"><a href="#5XX-服务器错误" class="headerlink" title="5XX 服务器错误"></a>5XX 服务器错误</h3><ul>
<li>500 Internal Server Error 服务端错误</li>
<li>503 Service Unavailable 服务端无法处理请求</li>
</ul>
<h2 id="与HTTP协作的Web服务器"><a href="#与HTTP协作的Web服务器" class="headerlink" title="与HTTP协作的Web服务器"></a>与HTTP协作的Web服务器</h2><h3 id="用单台虚拟机实现多个域名"><a href="#用单台虚拟机实现多个域名" class="headerlink" title="用单台虚拟机实现多个域名"></a>用单台虚拟机实现多个域名</h3><p>虚拟主机功能, 在Host首部指定主机名</p>
<h3 id="通信数据转发程序-代理-网关-隧道"><a href="#通信数据转发程序-代理-网关-隧道" class="headerlink" title="通信数据转发程序: 代理, 网关, 隧道"></a>通信数据转发程序: 代理, 网关, 隧道</h3><ul>
<li>代理<ul>
<li>接受请求并抓发给服务器, 将响应转发给客户端</li>
<li>不改变URL</li>
<li>可级联</li>
<li>缓存技术减少流量, 访问控制, 日志</li>
</ul>
</li>
<li>网关<ul>
<li>转发其他服务器通信数据的服务器, 对请求进行处理</li>
<li>能使线路上的服务器提供非HTTP协议服务</li>
<li>提高安全性</li>
</ul>
</li>
<li>隧道<ul>
<li>在客户服务端进行中转, 保持双方通信连接 的应用程序</li>
<li>SSL加密手段</li>
<li>不解析HTTP</li>
</ul>
</li>
</ul>
<h3 id="保存资源的缓存"><a href="#保存资源的缓存" class="headerlink" title="保存资源的缓存"></a>保存资源的缓存</h3><p>可避免多次从源服务器转发资源</p>
<ul>
<li>有效期限</li>
<li>客户端缓存</li>
</ul>
<h2 id="HTTP首部"><a href="#HTTP首部" class="headerlink" title="HTTP首部"></a>HTTP首部</h2><h3 id="HTTP报文首部"><a href="#HTTP报文首部" class="headerlink" title="HTTP报文首部"></a>HTTP报文首部</h3><p>请求中, HTTP报文由方法, URI, HTTP版本, HTTP首部字段等部分构成<br>响应中, HTTP报文由版本, 状态码, HTTP首部构成</p>
<h3 id="HTTP首部字段"><a href="#HTTP首部字段" class="headerlink" title="HTTP首部字段"></a>HTTP首部字段</h3><ul>
<li>提供报文主体大小, 使用的语言, 认证信息</li>
<li>HTTP首部字段结构, 由字段名: 字段值 构成</li>
<li>类型<ul>
<li>通用首部字段</li>
<li>请求首部字段</li>
<li>响应首部字段</li>
<li>实体首部字段</li>
</ul>
</li>
<li>一览 P80</li>
<li>非HTTP/1.1首部字段<ul>
<li>Cookie</li>
<li>Set-Cookie</li>
<li>Content-Disposition</li>
</ul>
</li>
<li>端到端首部 和 逐跳首部<ul>
<li>Connection, Keep-Alive, Proxy-Authenticate, Proxy-Authorization, Trailer, TE, Transfor-Encoding, Upgrade</li>
</ul>
</li>
</ul>
<h3 id="HTTP-1-1-通用首部字段"><a href="#HTTP-1-1-通用首部字段" class="headerlink" title="HTTP/1.1 通用首部字段"></a>HTTP/1.1 通用首部字段</h3><ul>
<li>Cache-Control 操作缓存工作机制<ul>
<li>表示是否缓存的指令<ul>
<li>public</li>
<li>private</li>
<li>no-cache <strong>不缓存过期资源</strong></li>
</ul>
</li>
<li>控制可执行缓存对象的指令<ul>
<li>no-store</li>
</ul>
</li>
<li>指定缓存期限和认证的指令<ul>
<li>s-maxage 只适用于供多位用户使用的公共缓存服务器</li>
<li>max-age</li>
<li>min-fresh</li>
<li>max-stale</li>
<li>only-if-cached</li>
<li>must-revalidate</li>
<li>proxy-revalidate</li>
<li>no-transform</li>
</ul>
</li>
</ul>
</li>
<li>Connection 控制不再转发给代理的首部字段 &amp;&amp; 管理持久连接</li>
<li>Date</li>
<li>Pragma HTTP/1.0向后兼容</li>
<li>Trailer 报文主体后使用首部字段</li>
<li>Transfer-Encoding 编码方式</li>
<li>Upgrade</li>
<li>Via</li>
<li>Warning</li>
</ul>
<h3 id="请求首部字段"><a href="#请求首部字段" class="headerlink" title="请求首部字段"></a>请求首部字段</h3><ul>
<li>Accept (q=权重 默认1.0)</li>
<li>Accept-Charset (q=权重)</li>
<li>Accept-Encoding</li>
<li>Accept-Language</li>
<li>Authorization</li>
<li>Expect</li>
<li>From</li>
<li>Host</li>
<li>If-Match</li>
<li>If-Modified-Since</li>
<li>If-None-Match</li>
<li>If-Range</li>
<li>If-Unmodified-Since</li>
<li>Max-Forwards</li>
<li>Proxy-Authorization</li>
<li>Range</li>
<li>Referer</li>
<li>TE</li>
<li>User-Agent</li>
</ul>
<h3 id="响应首部字段"><a href="#响应首部字段" class="headerlink" title="响应首部字段"></a>响应首部字段</h3><ul>
<li>Accept-Ranges</li>
<li>Age</li>
<li>ETag /W区分弱ETag</li>
<li>Location</li>
<li>Proxy-Authenticate</li>
<li>Retry-After</li>
<li>Server</li>
<li>Vary</li>
<li>WWW-Authenticate</li>
</ul>
<h3 id="实体首部字段"><a href="#实体首部字段" class="headerlink" title="实体首部字段"></a>实体首部字段</h3><ul>
<li>Allow</li>
<li>Connect-Encoding</li>
<li>Content-Language</li>
<li>Content-Length</li>
<li>Content-Location</li>
<li>Content-MD5</li>
<li>Content-Range</li>
<li>Content-Type</li>
<li>Expires</li>
<li>Last-Modified</li>
</ul>
<h3 id="为Cookie服务的首部字段"><a href="#为Cookie服务的首部字段" class="headerlink" title="为Cookie服务的首部字段"></a>为Cookie服务的首部字段</h3><ul>
<li>Set-Cookie</li>
<li>Cookie</li>
</ul>
<h3 id="其他首部字段"><a href="#其他首部字段" class="headerlink" title="其他首部字段"></a>其他首部字段</h3><ul>
<li>X-Frame-Options</li>
<li>X-XSS-Protection</li>
<li>DNT</li>
<li>P3P</li>
</ul>
<h2 id="确保Web安全的HTTPS"><a href="#确保Web安全的HTTPS" class="headerlink" title="确保Web安全的HTTPS"></a>确保Web安全的HTTPS</h2><blockquote>
<p>HTTP 存在信息窃听, 身份伪装等安全问题</p>
</blockquote>
<h3 id="HTTP缺点"><a href="#HTTP缺点" class="headerlink" title="HTTP缺点"></a>HTTP缺点</h3><ul>
<li>通信使用明文可能会被窃听<ul>
<li>TCP/IP是可能被窃听的网络</li>
<li>加密处理防止被窃听<ul>
<li>通信加密: SSL安全套阶层 + TLS安全传输层协议</li>
<li>内容加密: (报文主体不加密)</li>
</ul>
</li>
</ul>
</li>
<li>不验证通信方的神风就可能遭遇伪装<ul>
<li>任何人都可发起请求</li>
<li>查明对手的证书</li>
<li>无法证明报文完整性</li>
<li>如何防止篡改(散列值检验)</li>
</ul>
</li>
</ul>
<h3 id="HTTP-加密-认证-完整性保护-HTTPS"><a href="#HTTP-加密-认证-完整性保护-HTTPS" class="headerlink" title="HTTP+加密+认证+完整性保护=HTTPS"></a>HTTP+加密+认证+完整性保护=HTTPS</h3><ul>
<li>添加了加密及认证机制的HTTP成为HTTPS</li>
<li>HTTPS是身披SSL外壳的HTTP</li>
<li>相互交换密钥的公开蜜钥加密技术<ul>
<li>共享密钥加密的困境(对称加密易被窃取密钥)</li>
<li>使用两把密钥的公开密钥加密(安全 但较慢)</li>
<li>HTTPS采用混合加密机制</li>
</ul>
</li>
<li>证明公开密钥正确性的证书<ul>
<li>CA: 数字证书认证机构</li>
<li>可证明组织真实性的EV SSL证书</li>
<li>用以确认客户端的客户端证书</li>
<li>认证机构信誉第一</li>
<li>由自由认证机构颁发的证书为自签名证书</li>
</ul>
</li>
<li>HTTPS的安全通信机制<ul>
<li>SSL 和 TLS</li>
<li>SSL 通信慢, 消耗CPU处理慢</li>
</ul>
</li>
</ul>
<h2 id="确认访问用户身份的认证"><a href="#确认访问用户身份的认证" class="headerlink" title="确认访问用户身份的认证"></a>确认访问用户身份的认证</h2><h3 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h3><ul>
<li>HTTP认证方式<ul>
<li>BASIC 认证(id/secret base64明文发送)</li>
<li>DIGEST 认证(质询码+MD5)</li>
<li><strong>SSL 客户端认证</strong><ul>
<li>基于客户端证书(客户端安装)</li>
</ul>
</li>
<li>FormBase 认证</li>
</ul>
</li>
</ul>
<h2 id="基于HTTP的功能追加协议"><a href="#基于HTTP的功能追加协议" class="headerlink" title="基于HTTP的功能追加协议"></a>基于HTTP的功能追加协议</h2><h3 id="基于HTTP"><a href="#基于HTTP" class="headerlink" title="基于HTTP"></a>基于HTTP</h3><ul>
<li>满足需求但性能未必最优<ul>
<li>一条连接只能发送一个请求</li>
<li>请求只能从客户端开始, 客户端不接受响应以外的指令</li>
<li>首部未经压缩, 延迟大</li>
<li>冗长的首部, 浪费</li>
<li>任意压缩格式, 非强制</li>
</ul>
</li>
</ul>
<h3 id="Ajax"><a href="#Ajax" class="headerlink" title="Ajax"></a>Ajax</h3><ul>
<li>局部更新</li>
<li>未解决HTTP问题<h3 id="Comet-通过延迟应答-实现push功能"><a href="#Comet-通过延迟应答-实现push功能" class="headerlink" title="Comet(通过延迟应答, 实现push功能)"></a>Comet(通过延迟应答, 实现push功能)</h3></li>
<li>连接持续时间变长 消耗更多资源</li>
<li>局部更新</li>
<li>未解决HTTP问题<h3 id="SDPY"><a href="#SDPY" class="headerlink" title="SDPY"></a>SDPY</h3></li>
<li>在应用层与传输层之间加入会话层运作</li>
<li>采用HTTP建立通信连接</li>
<li>额外功能<ul>
<li>单一的TCP连接, 可处理无限多个HTTP请求</li>
<li>赋予请求优先级</li>
<li>压缩HTTP首部</li>
<li>推送功能</li>
<li>服务器提示功能<h3 id="WebSocket"><a href="#WebSocket" class="headerlink" title="WebSocket"></a>WebSocket</h3></li>
</ul>
</li>
<li>建立在HTTP基础上, 连接发起方仍是客户端</li>
<li>一旦建立WebSocket 通信连接, 任一方可直接向对方发送报文</li>
<li>额外功能<ul>
<li>推送功能</li>
<li>减少通信量</li>
</ul>
</li>
<li>连接步骤<ul>
<li>HTTP建立连接</li>
<li>握手请求 Upgrade</li>
<li>握手响应 101 HTTP-Code<h3 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP/2.0"></a>HTTP/2.0</h3><h3 id="WebDAV"><a href="#WebDAV" class="headerlink" title="WebDAV"></a>WebDAV</h3></li>
</ul>
</li>
<li>web服务器直接进行文件操作的分布式文件系统</li>
</ul>
<h2 id="构建Web内容的技术"><a href="#构建Web内容的技术" class="headerlink" title="构建Web内容的技术"></a>构建Web内容的技术</h2><h3 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h3><ul>
<li>HTML 超文本标记语言, 4.01版本(HTML5 2014年)</li>
<li>CSS 层叠样式表 文档结构和设计分离, 达到解耦</li>
</ul>
<h3 id="动态HTML"><a href="#动态HTML" class="headerlink" title="动态HTML"></a>动态HTML</h3><ul>
<li>JS利用DOM(文档对象模型)指定变动元素</li>
</ul>
<h3 id="Web应用"><a href="#Web应用" class="headerlink" title="Web应用"></a>Web应用</h3><ul>
<li>通用网关接口CGI</li>
</ul>
<h3 id="因Java而普及的Servlet"><a href="#因Java而普及的Servlet" class="headerlink" title="因Java而普及的Servlet"></a>因Java而普及的Servlet</h3><ul>
<li>解决CGI问题(复用进程)</li>
</ul>
<h3 id="数据发布的格式及语言"><a href="#数据发布的格式及语言" class="headerlink" title="数据发布的格式及语言"></a>数据发布的格式及语言</h3><ul>
<li>XML 可扩展标记语言</li>
<li>发布更新信息的RSS, 简易信息聚合</li>
<li>JSON JS对象表示法, 轻量级数据标记语言</li>
</ul>
<h2 id="Web的攻击技术"><a href="#Web的攻击技术" class="headerlink" title="Web的攻击技术"></a>Web的攻击技术</h2><h3 id="HTTP不具备安全功能"><a href="#HTTP不具备安全功能" class="headerlink" title="HTTP不具备安全功能"></a>HTTP不具备安全功能</h3><h3 id="在客户端即可篡改请求"><a href="#在客户端即可篡改请求" class="headerlink" title="在客户端即可篡改请求"></a>在客户端即可篡改请求</h3><h3 id="针对Web的攻击模式"><a href="#针对Web的攻击模式" class="headerlink" title="针对Web的攻击模式"></a>针对Web的攻击模式</h3><ul>
<li>主动攻击<ul>
<li>SQL注入</li>
<li>OS命令</li>
</ul>
</li>
<li>被动攻击<ul>
<li>(钓鱼网站)</li>
</ul>
</li>
</ul>
<h3 id="因输出值转义不完全引发的安全漏洞"><a href="#因输出值转义不完全引发的安全漏洞" class="headerlink" title="因输出值转义不完全引发的安全漏洞"></a>因输出值转义不完全引发的安全漏洞</h3><ul>
<li>XSS 跨站脚本攻击<ul>
<li>窃取个人信息</li>
<li>窃取Cookie</li>
</ul>
</li>
<li>SQL注入</li>
<li>OS命令注入攻击</li>
<li>HTTP首部注入攻击</li>
<li>邮件首部注入攻击</li>
<li>目录遍历攻击</li>
<li>远程文件包含漏洞</li>
</ul>
<h3 id="因设置或设计缺陷引发的安全漏洞"><a href="#因设置或设计缺陷引发的安全漏洞" class="headerlink" title="因设置或设计缺陷引发的安全漏洞"></a>因设置或设计缺陷引发的安全漏洞</h3><ul>
<li>强制浏览</li>
<li>不正确错误消息处理</li>
<li>开放重定向</li>
</ul>
<h3 id="因会话管理疏忽引发的安全漏洞"><a href="#因会话管理疏忽引发的安全漏洞" class="headerlink" title="因会话管理疏忽引发的安全漏洞"></a>因会话管理疏忽引发的安全漏洞</h3><ul>
<li>会话劫持</li>
<li>会话固定加攻击</li>
<li>跨站请求伪造</li>
</ul>
<h3 id="其他安全漏洞"><a href="#其他安全漏洞" class="headerlink" title="其他安全漏洞"></a>其他安全漏洞</h3><ul>
<li>密码破解</li>
<li>点击劫持</li>
<li>Dos攻击</li>
<li>后门程序</li>
</ul>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://www.amazon.cn/dp/B0153170B2/ref=sr_1_1?__mk_zh_CN=%E4%BA%9A%E9%A9%AC%E9%80%8A%E7%BD%91%E7%AB%99&keywords=%E5%9B%BE%E8%A7%A3http&qid=1600532256&sr=8-1">图解HTTP</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>Frontend</tag>
        <tag>学习笔记</tag>
        <tag>读书笔记</tag>
        <tag>TCP/IP</tag>
        <tag>HTTP</tag>
      </tags>
  </entry>
  <entry>
    <title>图解TCP/IP</title>
    <url>/2020/05/learn-tcpip/</url>
    <content><![CDATA[<h2 id="网络基础知识"><a href="#网络基础知识" class="headerlink" title="网络基础知识"></a>网络基础知识</h2><h3 id="出现背景"><a href="#出现背景" class="headerlink" title="出现背景"></a>出现背景</h3><h3 id="网络发展7个阶段"><a href="#网络发展7个阶段" class="headerlink" title="网络发展7个阶段"></a>网络发展7个阶段</h3><ul>
<li>批处理</li>
<li>分时系统<ul>
<li>多路性, 独占性, 交换性, 及时性</li>
</ul>
</li>
<li>计算机之间的通信</li>
<li>计算机网络</li>
<li>互联网的普及</li>
<li>互联网技术为中心</li>
<li>建立安全连接</li>
</ul>
<h3 id="协议"><a href="#协议" class="headerlink" title="协议"></a>协议</h3><h3 id="协议分层和OSI参考模型"><a href="#协议分层和OSI参考模型" class="headerlink" title="协议分层和OSI参考模型"></a>协议分层和OSI参考模型</h3><ul>
<li>应用层</li>
<li>表示层: 将设备固有的数据格式转换为网络标准传输格式</li>
<li>会话层</li>
<li>传输层</li>
<li>网络层</li>
<li>数据链路层</li>
<li>物理层</li>
</ul>
<h3 id="传输方式分类"><a href="#传输方式分类" class="headerlink" title="传输方式分类"></a>传输方式分类</h3><ul>
<li>面相有连接型 &amp; 面相无连接型</li>
<li>分组交换: 连接到通信电路的计算机将所要发送的数据分成多个数据包, 按照一定顺序排列分别发送</li>
<li>单播, 广播, 多播, 任播</li>
</ul>
<h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><ul>
<li>唯一性</li>
<li>层次性<ul>
<li>MAC寻址: 地址转发表</li>
<li>IP寻址: 路由控制表</li>
</ul>
</li>
</ul>
<h3 id="网络构成要素"><a href="#网络构成要素" class="headerlink" title="网络构成要素"></a>网络构成要素</h3><ul>
<li>通信媒介与数据链路<ul>
<li>传输速率-&gt;带宽(bps)</li>
<li>吞吐量(bps)</li>
</ul>
</li>
<li>网卡: 使计算机联网</li>
<li>中继器: 物理层延长网络</li>
<li>网桥: 数据链路层延长网络<ul>
<li>将损坏的帧丢弃</li>
<li>自学机制过滤功能控制网络流量(根据MAC地址)</li>
</ul>
</li>
<li>路由器: 通过网络层转发分组数据的设备<ul>
<li>连接两个网络, 对分组报文进行转发(根据IP地址)</li>
</ul>
</li>
<li>4~7层交换机: 传输层以上各层网络传输设备<ul>
<li>负载均衡器</li>
<li>DNS负载均衡</li>
<li>带宽控制(通信优先级)</li>
<li>广域网加速器</li>
<li>防火墙</li>
</ul>
</li>
<li>网关: 转换协议的设备<ul>
<li>不仅转发数据还负责对数据进行转换</li>
<li>代理服务器, C/S间无需在网络进行通信, 从传输层到应用层对数据和访问进行控制处理(防火墙)</li>
</ul>
</li>
</ul>
<h3 id="现代网络时态"><a href="#现代网络时态" class="headerlink" title="现代网络时态"></a>现代网络时态</h3><ul>
<li>网络构成<ul>
<li>边缘网络(主干网出入口)</li>
</ul>
</li>
<li>从信息发布者角度看网络<ul>
<li>数据中心: 为了减少访问延迟, 汇集多个存储于一起, 通过连接高速网络, 提高响应速度</li>
</ul>
</li>
</ul>
<h2 id="TCP-IP-基础知识"><a href="#TCP-IP-基础知识" class="headerlink" title="TCP/IP 基础知识"></a>TCP/IP 基础知识</h2><h3 id="出现背景及历史"><a href="#出现背景及历史" class="headerlink" title="出现背景及历史"></a>出现背景及历史</h3><h3 id="TCP-IP-标准化"><a href="#TCP-IP-标准化" class="headerlink" title="TCP/IP 标准化"></a>TCP/IP 标准化</h3><ul>
<li>具体来说, IP, ICMP, TCP, UDP, TELNET, FTP, HTTP都属于TCP/IP协议</li>
<li>TCP/IP精髓: 开放性, 实用性</li>
<li>TCP/IP规范: RFC</li>
</ul>
<h3 id="互联网基础知识"><a href="#互联网基础知识" class="headerlink" title="互联网基础知识"></a>互联网基础知识</h3><ul>
<li>结构: 每个网络由骨干网和末端网组成</li>
</ul>
<h3 id="TCP-IP协议分层模型"><a href="#TCP-IP协议分层模型" class="headerlink" title="TCP/IP协议分层模型"></a>TCP/IP协议分层模型</h3><ul>
<li>硬件(物理层)</li>
<li>网络接口层(数据链路层)</li>
<li>互联网层(网络层)<ul>
<li>IP: 跨越网络传送数据包, 使整个网络收到数据的协议. 不具有重发机制, 非可靠性</li>
<li>ICMP: IP数据包无法到达对端目标地址,给发送端发送一个异常通知</li>
<li>ARP: IP地址解析物理地址(MAC地址)</li>
</ul>
</li>
<li>传输层<ul>
<li>TCP: 面向有连接的传输层协议</li>
<li>UDP: 面向无连接的传输层协议</li>
</ul>
</li>
<li>应用层(会话层以上的分层)<ul>
<li>HTTP: 属于OSI的应用层</li>
<li>HTML: 属于表示层</li>
<li>SMTP: 发送电子邮件</li>
<li>MIME: 定义邮件数据格式的规范, 属于表示层</li>
<li>FTP: 两个TCP连接, 控制连接&amp;数据连接, 应用层</li>
<li>TELNET: (远程登录)应用层</li>
<li>SSH: (远程登录)应用层</li>
<li>SNMP: (网络管理)应用层</li>
</ul>
</li>
</ul>
<h2 id="数据链路"><a href="#数据链路" class="headerlink" title="数据链路"></a>数据链路</h2><h3 id="数据链路作用"><a href="#数据链路作用" class="headerlink" title="数据链路作用"></a>数据链路作用</h3><ul>
<li>WLAN 无线局域网</li>
<li>PPP 点对点协议</li>
</ul>
<h3 id="数据链路相关技术"><a href="#数据链路相关技术" class="headerlink" title="数据链路相关技术"></a>数据链路相关技术</h3><ul>
<li>MAC地址</li>
<li>共享介质型网络<ul>
<li>争用方式</li>
<li>令牌传递方式</li>
</ul>
</li>
<li>非共享介质网络</li>
<li>根据MAC地址转发(自学)</li>
<li>环路检测技术<ul>
<li>生成树方式</li>
<li>源路由法</li>
</ul>
</li>
<li>VLAN</li>
</ul>
<h3 id="以太网"><a href="#以太网" class="headerlink" title="以太网"></a>以太网</h3><h3 id="无线通信"><a href="#无线通信" class="headerlink" title="无线通信"></a>无线通信</h3><ul>
<li>IEEE802.11b/g/a/n</li>
<li>蓝牙</li>
<li>WiMAX</li>
<li>ZigBee</li>
</ul>
<h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><ul>
<li>ICP &amp; NCP</li>
<li>PPPoE 接入</li>
</ul>
<h3 id="其他数据链路"><a href="#其他数据链路" class="headerlink" title="其他数据链路"></a>其他数据链路</h3><ul>
<li>ATM</li>
<li>POS</li>
<li>FDDI</li>
<li>TokenRing</li>
</ul>
<h2 id="IP协议"><a href="#IP协议" class="headerlink" title="IP协议"></a>IP协议</h2><ul>
<li>IP</li>
<li>ICMP</li>
</ul>
<h3 id="OSI第三层"><a href="#OSI第三层" class="headerlink" title="OSI第三层"></a>OSI第三层</h3><h3 id="IP基础知识"><a href="#IP基础知识" class="headerlink" title="IP基础知识"></a>IP基础知识</h3><ul>
<li>路由控制: 将分组数据发送到最终目标地址</li>
<li>Hop: 一跳指利用数据链路层以下分层的功能传输数据帧的一个区间</li>
<li>路由控制表: 记录IP数据在下一步应该发给哪个服务器</li>
<li>数据链路抽象化: 不同数据链路层, 不同的最大传输单位(MTU), IP层分片处理</li>
<li>IP属于面向无连接型</li>
</ul>
<h3 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h3><ul>
<li>网络标识.主机标识</li>
<li>分类<ul>
<li>A: 0开始(0.0.0.0~127.0.0.1) 8位网络标识</li>
<li>B: 10开始(128.0.0.0~191.255.0.0) 16位网络标识</li>
<li>C: 110开始(192.0.0.0~223.255.255.0) 24位网络标识</li>
<li>D: 1110开始(224.0.0.0~239.255.255.255) 32位网络标识, 无主机标识</li>
</ul>
</li>
<li>广播地址, 主机地址全为1<ul>
<li>本地广播(本网络内广播)</li>
<li>直接广播(不同网络间)</li>
</ul>
</li>
<li>IP多播: 既可以穿透路由器, 又可以实现给必要的组发数据包<ul>
<li>多播使用D类地址(28位多播组编号, 32-lens(1110))</li>
</ul>
</li>
<li>子网掩码: 通过子网网络细分出更小粒度网络</li>
<li>CIDR(无类型域间选路): 采用任意长度分格IP地址的网络标识和主机标识</li>
<li>VLSM(可变长子网掩码)</li>
<li>私有网络IP地址<ul>
<li>10/8 A类</li>
<li>172.16/12 B类</li>
<li>192.168/16 C类</li>
</ul>
</li>
<li>NAT技术: 互换私有IP和全局IP</li>
</ul>
<h3 id="路由控制"><a href="#路由控制" class="headerlink" title="路由控制"></a>路由控制</h3><ul>
<li>默认路由: 0.0.0.0/0</li>
<li>主机路由: 整个IP地址所有位都参与路由, 用于不希望通过网络地址路由的情况</li>
<li>环回地址: 127.0.0.1</li>
<li>路由控制表聚合: 减少路由表条目</li>
</ul>
<h3 id="IP分割处理与再构成处理"><a href="#IP分割处理与再构成处理" class="headerlink" title="IP分割处理与再构成处理"></a>IP分割处理与再构成处理</h3><ul>
<li>数据链路不同, MTU相异</li>
<li>路径MTU发现</li>
</ul>
<h3 id="IPv6"><a href="#IPv6" class="headerlink" title="IPv6"></a>IPv6</h3><ul>
<li>8个16位字节</li>
<li>特点<ul>
<li>IP地址扩大, 路由控制表聚合</li>
<li>性能提升, 路由器不分片(路径MTU发现)</li>
<li>即插即用: 没有DHCP的服务器也自动分配IP</li>
<li>认证加密, 防线路窃听(IPsec)</li>
<li>多播, Mobile IP 成为扩展功能</li>
</ul>
</li>
<li>全局单播地址: 64bit网络标识 64bit主机标识</li>
<li>链路本地单播地址: 1111 1110 10 + 54bit 0 (FE80::/10)</li>
<li>唯一本地地址: FC00::7</li>
<li>IPv6分段处理: IPv6最小MTU1280字节</li>
</ul>
<h3 id="IPv4首部"><a href="#IPv4首部" class="headerlink" title="IPv4首部"></a>IPv4首部</h3><ul>
<li>4bit 版本</li>
<li>4bit 首部长度</li>
<li>8bit 区分服务(TOS)</li>
<li>16bit 总长度(IP包最大长度 2^16 = 65535字节)</li>
<li>16bit 标识, 用于分片重组</li>
<li>3bit flags</li>
<li>13bit 片偏移 单位8字节, 最多表示2^13 * 8 = 65535字节偏移量</li>
<li>8bit TTL 生存时间</li>
<li>8bit 上层协议编号</li>
<li>16bit 首部校验和</li>
<li>32bit 源地址</li>
<li>32bit 目标地址</li>
<li>可选项</li>
<li>填充</li>
<li>数据</li>
</ul>
<h3 id="IPv6首部"><a href="#IPv6首部" class="headerlink" title="IPv6首部"></a>IPv6首部</h3><ul>
<li>4bit 版本</li>
<li>8bit 通信量类, 相当于TOS</li>
<li>20bit 流标号</li>
<li>16bit 有效载荷长度</li>
<li>8bit 下一个首部, 相当于上层协议</li>
<li>8bit 跳数限制, 相当于TTL</li>
<li>128bit 源地址</li>
<li>128bit 目标地址</li>
<li>IPv6扩展首部: IPv6首部长度固定, 无可选项, 通过扩展首部对功能进行扩展</li>
</ul>
<h2 id="IP协议相关技术"><a href="#IP协议相关技术" class="headerlink" title="IP协议相关技术"></a>IP协议相关技术</h2><h3 id="仅凭IP无法完成通信"><a href="#仅凭IP无法完成通信" class="headerlink" title="仅凭IP无法完成通信"></a>仅凭IP无法完成通信</h3><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><ul>
<li>域名构成<h3 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h3></li>
<li>RARP<h3 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h3><h3 id="DHCP"><a href="#DHCP" class="headerlink" title="DHCP"></a>DHCP</h3><blockquote>
<p>Dynamic Host Configuration Protocol</p>
</blockquote>
</li>
</ul>
<h3 id="NAT"><a href="#NAT" class="headerlink" title="NAT"></a>NAT</h3><blockquote>
<p>Network Address Translator<br>用于在本地网络中使用私有地址, 在连接互联网时使用全局IP的技术</p>
</blockquote>
<ul>
<li>NAPT</li>
<li>NAT-PT(NAPT-PT): 将IPv4首部转为IPv6首部</li>
<li>问题<ul>
<li>无法从外部向内部建立连接</li>
<li>转换表开销<ul>
<li>改用IPv6</li>
<li>NAT穿越</li>
</ul>
</li>
<li>NAT重重新启动, TCP连接将被重置</li>
<li>即时备置2台NAT做容灾备份, TCP连接还是会被断开</li>
</ul>
</li>
</ul>
<h3 id="IP隧道"><a href="#IP隧道" class="headerlink" title="IP隧道"></a>IP隧道</h3><blockquote>
<p>网络层首部后面继续追加网络层首部的通信方法</p>
</blockquote>
<h3 id="其他相关技术"><a href="#其他相关技术" class="headerlink" title="其他相关技术"></a>其他相关技术</h3><ul>
<li>IP多播相关技术<ul>
<li>IGMP(MLD): 向路由器表明想要接收多播消息, 向交换集线器通知想要接受多播的地址.</li>
</ul>
</li>
<li>IP任播</li>
<li>通信质量控制</li>
<li>显式拥塞通知(ECN)</li>
<li>Mobile IP: 子网IP发生变化时, 主机IP地址仍保持不变</li>
</ul>
<h2 id="TCP与UDP"><a href="#TCP与UDP" class="headerlink" title="TCP与UDP"></a>TCP与UDP</h2><h3 id="传输层的作用"><a href="#传输层的作用" class="headerlink" title="传输层的作用"></a>传输层的作用</h3><ul>
<li>传输层指定上层应用程序, 使用端口号做识别码</li>
<li>服务端程序, 守护进程, inetd(互联网守护进程), 收到客户端请求后复刻(fork)新的进程并转换(exec)为sshd等各个守护进程</li>
<li>TCP: 面向连接可靠的流协议, 流是不间断的数据结构</li>
<li>UDP: 不具有可靠性</li>
<li>Socket: 通信时使用到的操作系统类库(API)</li>
</ul>
<h3 id="端口号"><a href="#端口号" class="headerlink" title="端口号"></a>端口号</h3><ul>
<li>用于识别同一台计算机中进行通信的不同应用程序</li>
<li>采用5个信息识别一个通信: 源IP, 目标IP, 协议号, 源端口, 目标端口.</li>
<li>0~1023 知名端口号</li>
<li>1024~49151 用于任何通信用途</li>
<li>49152~65535 动态分配的端口号</li>
</ul>
<h3 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h3><h3 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h3><ul>
<li>通过序列号与确认应答提高可靠性</li>
<li>重发超时</li>
<li>连接管理: 通信开始之前做好通信两端之间的准备工作</li>
<li>TCP以段为单位发送数据, 最大消息长度(MSS)</li>
<li>利用窗口控制提高速度, 窗口大小指无需等待ACK而可以继续发送数据的最大值</li>
<li>窗口控制与重发控制, 滑动窗口, 高速重发控制</li>
<li>流控制: 让发送端根据接收端的实际接收能力控制发送的数据量</li>
<li>拥塞控制: 通信一开始通过慢启动算法, 对发送数据量进行控制. 慢启动阀值(拥塞窗口超过阀值, 只允许以 [1数据段字节数/拥塞窗口 * 1数据段字节数] 放大拥塞窗口)</li>
<li>提高网络利用率的规范<ul>
<li>Nagle算法: 延迟一段时间再进行数据发送</li>
<li>延迟确认应答: 收到数据后并不立即返回确认应答</li>
<li>捎带应答: 确认应答和回执数据通过一个包发送</li>
</ul>
</li>
</ul>
<h3 id="其他传输层协议"><a href="#其他传输层协议" class="headerlink" title="其他传输层协议"></a>其他传输层协议</h3><ul>
<li>UDP-Lite</li>
<li>SCTP: 为多个NIC的主机提供可靠传输</li>
<li>DCCP</li>
</ul>
<h3 id="UDP首部格式"><a href="#UDP首部格式" class="headerlink" title="UDP首部格式"></a>UDP首部格式</h3><ul>
<li>16bit 源端口号</li>
<li>16bit 目标端口号</li>
<li>包长度(首部和数据长度之和), 单位为字节</li>
<li>校验和</li>
</ul>
<h3 id="TCP首部格式"><a href="#TCP首部格式" class="headerlink" title="TCP首部格式"></a>TCP首部格式</h3><ul>
<li>16bit 源端口号</li>
<li>16bit 目标端口号</li>
<li>32bit 序列号</li>
<li>32bit 确认应答号</li>
<li>4bit 数据偏移, 单位4字节</li>
<li>4bit 保留</li>
<li>8bit 控制位</li>
<li>16bit 窗口大小</li>
<li>校验和</li>
<li>16bit 紧急指针</li>
<li>选项</li>
</ul>
<h2 id="路由协议"><a href="#路由协议" class="headerlink" title="路由协议"></a>路由协议</h2><h3 id="路由控制的定义"><a href="#路由控制的定义" class="headerlink" title="路由控制的定义"></a>路由控制的定义</h3><ul>
<li>路由器根据路由控制表转发数据包</li>
<li>静态路由</li>
<li>动态路由</li>
</ul>
<h3 id="路由控制范围"><a href="#路由控制范围" class="headerlink" title="路由控制范围"></a>路由控制范围</h3><ul>
<li>AS 自治系统</li>
<li>外部网关协议EGP<ul>
<li>BGP边界网关协议</li>
</ul>
</li>
<li>内部网关协议IGP<ul>
<li>RIP 路由信息协议</li>
<li>RIP2</li>
<li>OPSF开放式最短路径优先</li>
</ul>
</li>
</ul>
<h3 id="路由算法"><a href="#路由算法" class="headerlink" title="路由算法"></a>路由算法</h3><ul>
<li>距离向量算法<ul>
<li>只有距离和方向信息</li>
<li>路有收敛: 获得稳定路由信息之前需要一定时间</li>
<li>极易发生路由循环</li>
</ul>
</li>
<li>链路状态算法<ul>
<li>每个路由器保持同样的信息才能选择正确的路由</li>
</ul>
</li>
</ul>
<h3 id="RIP"><a href="#RIP" class="headerlink" title="RIP"></a>RIP</h3><blockquote>
<p>距离向量型路由协议. 广泛应用于LAN</p>
</blockquote>
<ul>
<li>广播路由控制信息, 每30s一次, 6次未收到信息关闭连接</li>
<li>根据距离向量确定路由, 单位为跳数.</li>
<li>使用子网掩码时RIP处理</li>
<li>RIP中路由变更处理<ul>
<li>最长距离不超过16</li>
<li>路由器不再把所受到的路由信息返回给发送端, 水平分割</li>
<li>有环路的情况<ul>
<li>毒性逆转, 不是不再发送, 而是发送一个距离为16的消息</li>
<li>触发更新, 路由发生变化, 不等待30s而是立刻发送出去</li>
</ul>
</li>
</ul>
</li>
<li>RIP2<ul>
<li>使用多播而不是广播</li>
<li>支持子网掩码</li>
<li>外部路由标志</li>
<li>身份验证密钥</li>
</ul>
</li>
</ul>
<h3 id="OSPF"><a href="#OSPF" class="headerlink" title="OSPF"></a>OSPF</h3><blockquote>
<p>链路状态型路由协议, 支持子网掩码</p>
</blockquote>
<ul>
<li>OSPF是链路状态型路由协议, 可以给每条链路赋予权重</li>
<li>工作原理<ul>
<li>HELLO协议进行连接确认</li>
<li>链路状态更新包<ul>
<li>网络LSA</li>
<li>路由器LSA</li>
</ul>
</li>
</ul>
</li>
<li>将区域分层化进行细分管理</li>
</ul>
<h3 id="BGP"><a href="#BGP" class="headerlink" title="BGP"></a>BGP</h3><blockquote>
<p>BGP(边界网关协议)是连接不同组织机构的一种协议, 属于EGP(外部网关协议)</p>
</blockquote>
<ul>
<li>BGP是路径向量协议<ul>
<li>访问列表不仅包含转发方向和距离, 还涵盖途径所有AS的编号, 不属于距离向量型</li>
<li>网络构造仅用一元化表示, 不属于链路状态型</li>
</ul>
</li>
</ul>
<h3 id="MPLS"><a href="#MPLS" class="headerlink" title="MPLS"></a>MPLS</h3><blockquote>
<p>标记交换技术<br>路由技术基于IP地址最长匹配进行转发<br>标记交换对每个IP包设定标记, 根据标记转发</p>
</blockquote>
<ul>
<li>基本动作<ul>
<li>LSR 标记交换路由器</li>
<li>LER 标记边缘路由器, 进行标记追加删除操作<ul>
<li>Push: 附加标记转发</li>
<li>Swap: 替换标记转发</li>
<li>Pop: 去掉标记转发</li>
</ul>
</li>
<li>LSP 标记交换路径, 属于单方向通路</li>
</ul>
</li>
<li>优点<ul>
<li>高速转发</li>
<li>设置几处必要信息而不是大量路由表</li>
<li>利用标记生成虚拟路径</li>
</ul>
</li>
</ul>
<h2 id="应用协议"><a href="#应用协议" class="headerlink" title="应用协议"></a>应用协议</h2><h3 id="远程登录"><a href="#远程登录" class="headerlink" title="远程登录"></a>远程登录</h3><ul>
<li><p>TELNET</p>
<blockquote>
<p>利用TCP一条连接, 向主机发送文字命令并在职级上执行</p>
</blockquote>
</li>
<li><p>SSH</p>
</li>
</ul>
<h3 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h3><ul>
<li>FTP<blockquote>
<p>两条TCP连接, 一条用来控制, 另一条用于数据传输</p>
</blockquote>
</li>
</ul>
<h3 id="电子邮件"><a href="#电子邮件" class="headerlink" title="电子邮件"></a>电子邮件</h3><ul>
<li>MIME: 多种数据格式</li>
<li>STMP: 发送电子邮件协议, TCP port:25</li>
<li>POP: 接收端从邮件服务器接收邮件, TCP</li>
<li>IMAP: 接收电子邮件的协议, 与POP在客户端不同, IMAP在服务端管理邮件</li>
</ul>
<h3 id="www"><a href="#www" class="headerlink" title="www"></a>www</h3><ul>
<li>URL: 标识资源</li>
<li>HTML</li>
<li>HTTP</li>
<li>JavaScript, CGI, Cookie</li>
</ul>
<h3 id="网络管理"><a href="#网络管理" class="headerlink" title="网络管理"></a>网络管理</h3><ul>
<li>SNMP: 基于UDP/IP, 网络管理中收集必要信息.</li>
<li>MIB: SNMP中交互的信息, 由监控网络中某个设备接口的众多参数构成</li>
<li>RMON: 由监控网络上线路的众多参数构成</li>
</ul>
<h3 id="其他应用层协议"><a href="#其他应用层协议" class="headerlink" title="其他应用层协议"></a>其他应用层协议</h3><ul>
<li>多媒体通信实现技术<ul>
<li>H.323: IP网上传输音视频</li>
<li>SIP: 与H.322相对的TCP/IP协议</li>
<li>RTP: UDP实现对媒体通信时, 附加一个表示报文顺序的序列号字段, 同时对报文发送时间进行管理</li>
</ul>
</li>
<li>P2P: 网络上终端或主机不经过服务器直接1对1相互通信</li>
<li>LDAP: 轻量级目录访问协议, 目录服务指网络上存在的提供相关资源的数据库. 定义了目录树结构, 数据格式, 命名规则, 目录访问顺序和安全认证</li>
</ul>
<h2 id="网络安全"><a href="#网络安全" class="headerlink" title="网络安全"></a>网络安全</h2><h3 id="TCP-IP-与网络安全"><a href="#TCP-IP-与网络安全" class="headerlink" title="TCP/IP 与网络安全"></a>TCP/IP 与网络安全</h3><h3 id="网络安全构成要素"><a href="#网络安全构成要素" class="headerlink" title="网络安全构成要素"></a>网络安全构成要素</h3><ul>
<li>防火墙<ul>
<li>过滤/不过滤特定数据包的包过滤防火墙</li>
<li>数据达到应用后由应用处理并拒绝非法访问的应用网关</li>
</ul>
</li>
<li>IDS: 入侵检测系统</li>
<li>反病毒/个人防火墙</li>
</ul>
<h3 id="加密技术基础"><a href="#加密技术基础" class="headerlink" title="加密技术基础"></a>加密技术基础</h3><ul>
<li>分层<ul>
<li>应用层: SSH, SSH-Telnet, PET等远程登录, PGP, S/MIME</li>
<li>表示层, 传输层: SSL/TLS, SOCKS V5加密</li>
<li>网络层: IPsec</li>
<li>数据链路层: Ethernet, WAN加密配置, PPTP(PPP)</li>
</ul>
</li>
<li>对称密码体质与公钥密码体制<ul>
<li>对称加密(加密解密使用相同密钥): AES, DES</li>
<li>公钥解密(加密解密使用不同密钥): RSA, DH. 椭圆曲线加密</li>
</ul>
</li>
<li>身份认证技术</li>
</ul>
<h3 id="安全协议"><a href="#安全协议" class="headerlink" title="安全协议"></a>安全协议</h3><ul>
<li>IPsec与VPN: 构建VPN, 在IP首部后面追加”封装安全有效载荷”和”认证首部”, 对此后数据进行加密</li>
<li>TLS/SSL与HTTPS: HTTPS使用对称加密, 发送其公共密钥采用公钥加密</li>
<li>IEEE802.1X: 为了接入LAN交换机和无线LAN接入点而对用户进行认证的技术</li>
</ul>
<h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p><a href="https://book.douban.com/subject/24737674/">图解TCP/IP</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>读书笔记</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>学习笔记</tag>
        <tag>读书笔记</tag>
        <tag>TCP/IP</tag>
      </tags>
  </entry>
  <entry>
    <title>DIY-PC 两三事</title>
    <url>/2020/10/tips-diy-pc/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote>
<p>本文主要是一些DIY硬件的技术参数释意, 也是自己的diy避坑之路</p>
</blockquote>
<p>每个男孩子上学时的梦, 是天天和下图的这些待在一起, 能抱回家更是美滋滋.</p>
<p><img src="/tips-diy-pc/image-20201003222907833.png" alt="image-20201003222907833"></p>
<p>说的当然不是妹子, 是说高配主机, 大屏, 专业外设, 沉浸式桌椅, 满硬盘的游戏/电影…</p>
<p>就着连续几次研究PC/服务器硬件的机会, 趁着今年最后一个长假入坑DIY, 早买早享受吧</p>
<p>预算, 大概是这个淘宝爆款的水平 2899</p>
<img src="tips-diy-pc/image-20201003224509251.png" alt="image-20201003224509251" style="float:left;zoom:50%;" />

<h1 id="主要硬件"><a href="#主要硬件" class="headerlink" title="主要硬件"></a>主要硬件</h1><h2 id="CPU"><a href="#CPU" class="headerlink" title="CPU"></a>CPU</h2><blockquote>
<p>6月22日, 苹果公司在一年一度的全球开发者大会 WWDC 上, 宣布彻底放弃英特尔公司（Intel）的 CPU, 改用自己设计的 ARM 芯片</p>
</blockquote>
<h3 id="CPU架构是什么"><a href="#CPU架构是什么" class="headerlink" title="CPU架构是什么"></a>CPU架构是什么</h3><blockquote>
<p><strong>不同的 CPU 设计实现, 就称为” CPU 架构”</strong>, 目前最常见的架构只剩下两种：x86 架构和 ARM 架构</p>
<p>x86 架构性能好, 但是耗电多、电压高, 主要用于桌面电脑和服务器, 生产厂商为 Intel 公司和 AMD 公司。</p>
<p>ARM 架构耗电小、电压低, 但是单核性能不如 x86, 主要用于移动设备。ARM 芯片的生产商有许多家, 这是因为它的商业模式是授权制。英国的 ARM 公司出售指令集的授权, 购买授权的公司可以基于公版的设计, 开发自己的 ARM 芯片。高通、三星、华为、苹果等公司的芯片, 都属于这个模式。</p>
</blockquote>
<h3 id="复杂指令集和精简指令集"><a href="#复杂指令集和精简指令集" class="headerlink" title="复杂指令集和精简指令集"></a>复杂指令集和精简指令集</h3><ul>
<li><strong>CISC</strong>: <a href="https://zh.wikipedia.org/wiki/CDC_6600">CDC 6600</a>、<a href="https://zh.wikipedia.org/wiki/System/360">System/360</a>、<a href="https://zh.wikipedia.org/wiki/VAX">VAX</a>、<a href="https://zh.wikipedia.org/wiki/PDP-11">PDP-11</a>、<a href="https://zh.wikipedia.org/wiki/Motorola_68000">Motorola 68000</a>家族、<a href="https://zh.wikipedia.org/wiki/X86">x86</a>等</li>
<li><strong>RISC</strong>: <a href="https://zh.wikipedia.org/wiki/DEC_Alpha">DEC Alpha</a>、<a href="https://zh.wikipedia.org/w/index.php?title=ARC_(%E8%99%95%E7%90%86%E5%99%A8)&action=edit&redlink=1">ARC</a>、<a href="https://zh.wikipedia.org/wiki/ARM%E6%9E%B6%E6%A7%8B">ARM</a>、<a href="https://zh.wikipedia.org/wiki/AVR">AVR</a>、<a href="https://zh.wikipedia.org/wiki/MIPS%E6%9E%B6%E6%A7%8B">MIPS</a>、<a href="https://zh.wikipedia.org/wiki/PA-RISC">PA-RISC</a>、<a href="https://zh.wikipedia.org/wiki/Power_Architecture">Power ISA</a>（包括<a href="https://zh.wikipedia.org/wiki/PowerPC">PowerPC</a>、<a href="https://zh.wikipedia.org/wiki/Cell">PowerXCell</a>）、<a href="https://zh.wikipedia.org/wiki/RISC-V">RISC-V</a>和<a href="https://zh.wikipedia.org/wiki/SPARC">SPARC</a>等</li>
</ul>
<h3 id="CPU参数"><a href="#CPU参数" class="headerlink" title="CPU参数"></a>CPU参数</h3><ul>
<li><p>型号</p>
<ul>
<li>Intel: <ul>
<li>Core中高端型<ul>
<li>至尊版i7定价都是999美元, 其象征意义远大于实际意义, 为的是告诉广大消费者——我有实力造出这样的性能怪兽, 也不会指望一年能出货多少 hhh</li>
</ul>
</li>
<li>Pentium中端入门型</li>
<li>Celeron低端入门型</li>
<li>Xeon服务器型</li>
<li>Itanium服务器型</li>
<li>Atom智能手机/平板电脑和低成本PC</li>
<li>Quark SoC可穿戴设备在内的新市场 </li>
</ul>
</li>
<li>AMD:<ul>
<li>APU(Accelerated Processing Unit)集成了显示核心的AMD处理器</li>
<li>锐龙(Ryzen)高端型,听说第三代真香</li>
<li>弈龙(Phenom)中端型</li>
<li>速龙(Athlon)中端型</li>
<li>闪龙(Sempron)入门型</li>
<li>霄龙(Epyc)服务器型, 取代Opteron</li>
<li>皓龙(Opteron)服务器型</li>
</ul>
</li>
</ul>
</li>
<li><p>制作工艺:</p>
<blockquote>
<p>CPU的生产是需要经过7个工序的, 分别是：硅提纯, 切割晶圆, 影印, 蚀刻, 重复、分层, 封装, 测试</p>
<p>通常来说制程工艺越先进, 芯片晶体管集成度越高, 核心面积越小, 成本越低, 而性能会更强</p>
<p>台积电、三星都宣布了5nm EUV工艺, 据悉苹果明年的A14处理器就会用上5nm EUV工艺, 再下一代可能就是3nm工艺了</p>
</blockquote>
</li>
<li><p>核心代号</p>
<ul>
<li><a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E7%89%B9%E5%B0%94%E5%BE%AE%E5%A4%84%E7%90%86%E5%99%A8%E5%88%97%E8%A1%A8#Xeon_(64-bit_NetBurst)">英特尔微处理器列表</a></li>
<li><a href="https://zh.wikipedia.org/wiki/AMD%E8%99%95%E7%90%86%E5%99%A8%E5%88%97%E8%A1%A8">AMD处理器列表</a></li>
</ul>
</li>
<li><p>插槽类型</p>
<ul>
<li><a href="https://baike.baidu.com/item/CPU%E6%8F%92%E6%A7%BD">CPU插槽</a> 事关主板选购的, 不能乱来…</li>
</ul>
</li>
<li><p>CPU主频 </p>
<ul>
<li>家用机尤其游戏PC的CPU, 核数其实不需要多, 需要的是单核频率</li>
</ul>
</li>
<li><p>核数/线程数</p>
<ul>
<li><p>核是可以看的到的, 真实的cpu核</p>
</li>
<li><p>线程数是一种逻辑的概念, 简单地说, 就是模拟出的CPU核心数</p>
<blockquote>
<p>我常说我是多线程, 从来不说我是多核…长了好几个大脑被丧尸们抓去做生物样本可咋整</p>
</blockquote>
</li>
</ul>
</li>
<li><p>缓存</p>
</li>
<li><p>支持内存, 详见内存一节</p>
</li>
</ul>
<h3 id="标签辨别"><a href="#标签辨别" class="headerlink" title="标签辨别"></a>标签辨别</h3><img src="tips-diy-pc/image-20201004104303128.png" alt="image-20201004104303128" style="zoom:50%;" />

<ul>
<li>S-SPEC可在以下网址查询详细内容<ul>
<li><a href="http://www.cpu-world.com/">http://www.cpu-world.com/</a></li>
<li><a href="http://ark.intel.com/">http://ark.intel.com/</a></li>
</ul>
</li>
<li>如果装机上电了, 下载安装<ul>
<li>HWInfo</li>
<li>CPU-Z</li>
</ul>
</li>
</ul>
<h3 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>最重要的是架构越新越好, 其次是2级缓存越大越好, 独立的好于共享的, 有3级缓存的好于没有的, 再次, 同架构的CPU, 主频越高越好</li>
<li>3+GHz, 4核是我的预算级别的主流, 我使用PC五五开(高密集运算+打游戏), 所以核数多点, 主频降点也在考虑范围内</li>
<li>核显总让我有一种5000买手机, 4000花在了6/8/10摄上的感觉..(我手机用摄像头只限于扫码), 既然要上独显, 能省杯奶茶是杯奶茶</li>
<li>ARM, AMD, APU 真真别弄混了…</li>
<li>多看看cpu天梯图</li>
</ul>
<h3 id="我挖到的"><a href="#我挖到的" class="headerlink" title="我挖到的"></a>我挖到的</h3><p>INTEL XEON E5-2670</p>
<p>SR0KX 2.6GHz</p>
<p>C2步进…不敢刮ES/QS</p>
<h3 id="本节参考"><a href="#本节参考" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="http://m.elecfans.com/article/610826.html">英特尔cpu型号及分类</a></li>
<li><a href="www.ruanyifeng.com/blog/2011/01/brief_history_of_arm.html">ARM的历史</a></li>
<li><a href="www.ruanyifeng.com/blog/2020/06/cpu-architecture.html">Intel 与 ARM 的战争</a></li>
<li><a href="https://cloud.tencent.com/developer/article/1465603">性能基础之CPU、物理核、逻辑核概念与关系</a></li>
<li><a href="https://mp.weixin.qq.com/s?__biz=MzI4OTE3NTUxNQ==&mid=2247483968&idx=1&sn=da9310870e6f0b04eea73ab70c693f14&scene=0#wechat_redirect">ES？QS？谈谈CPU挑选时的二三事</a></li>
</ul>
<h2 id="主板-amp-显卡"><a href="#主板-amp-显卡" class="headerlink" title="主板 &amp; 显卡"></a>主板 &amp; 显卡</h2><blockquote>
<p>以后补充吧, 确实没咋研究, 主板能适配CPU, 显卡就看了眼天梯图</p>
</blockquote>
<h3 id="我挖到的-1"><a href="#我挖到的-1" class="headerlink" title="我挖到的"></a>我挖到的</h3><ul>
<li>影驰GeForce GTX 1060虎将 3G</li>
<li>华南X79</li>
</ul>
<h3 id="本节参考-1"><a href="#本节参考-1" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="https://zhuanlan.zhihu.com/p/107529789">捡漏指南~~(x58/x79/x99芯片组</a></li>
<li><a href="https://www.mydrivers.com/zhuanti/tianti/gpu/">桌面显卡天梯图</a></li>
</ul>
<h2 id="内存"><a href="#内存" class="headerlink" title="内存"></a>内存</h2><blockquote>
<p>内存类型是指不同类型的内存传输类型各有差异, 在传输率、工作频率、工作方式、工作电压等方面都有不同的各种类型内存。市场中主要有的内存类型有SDRAM、DDR SDRAM和RDRAM三种</p>
<p>SDRAM从发展到现在已经经历了五代, 分别是：第一代SDR SDRAM, 第二代DDR SDRAM, 第三代DDR2 SDRAM, 第四代DDR3 SDRAM, 第五代, DDR4 SDRAM</p>
<p>在80286时代，内存颗粒（Chip）是直接插在主板上的，叫做DIP(Dual In-line Package)。到了80386时代，换成1片焊有内存颗粒的电路板，叫做SIMM（Single-Inline Memory Module）。由阵脚形态变化成电路板带来了很多好处:模块化，安装便利等等，由此DIY市场才有可能产生。当时SIMM的位宽是32bit，即一个周期读取4个字节，到了奔腾时，位宽变为64bit，即8个字节，于是SIMM就顺势变为DIMM（Double-Inline Memory Module）。这种形态一直延续至今，也是内存条的基本形态。</p>
</blockquote>
<h3 id="内存参数"><a href="#内存参数" class="headerlink" title="内存参数"></a>内存参数</h3><ul>
<li><p>类型</p>
<ul>
<li>最新DDR4了, DDR3能出便宜货</li>
</ul>
</li>
<li><p>主频</p>
</li>
<li><p>插槽类型</p>
<blockquote>
<p>所谓双通道(channel)DDR，就是芯片组可以在两个不同的数据通道上分离寻址、读取数据。这两个相互独立工作的内存通道是依靠于两个独立并行工作的、位宽为64-bit的内存(DIMM)节制器下，因此使普通的DDR内存可以到达128-bit的位宽</p>
<p>Tip: <a href="https://kuaibao.qq.com/s/20200219AZOYL100?refer=spider">内存安装的远端优先原则</a></p>
</blockquote>
<ul>
<li>SIMM</li>
<li><strong>DIMM</strong></li>
<li>RIMM</li>
</ul>
</li>
</ul>
<h3 id="标签辨别-1"><a href="#标签辨别-1" class="headerlink" title="标签辨别"></a>标签辨别</h3><p><img src="/tips-diy-pc/image-20201004112152590.png" alt="image-20201004112152590"></p>
<p>以单条2GB 2Rx8 PC3-10600E-9-10-E0为例</p>
<ul>
<li>2GB内存容量</li>
<li>2Rx8<ul>
<li>双面(RANK), 每颗内存颗粒(chip)8bit</li>
</ul>
</li>
</ul>
<p><img src="/tips-diy-pc/image-20201004120356907.png" alt="image-20201004120356907"></p>
<blockquote>
<p>一般来讲，一条内存总线的data宽度是64bits，也就是说总线上有64条道，每条道上一次传送1位数据</p>
<p>DIMM上的每个内存颗粒，提供4位、8位或者16位数据，来组成这64位数据(data word)。提供4位数据的芯片记作x4，提供8位数据的记作x8</p>
<p>一条DIMM上一般至少有8颗内存颗粒（x16的用的比较少），排列在DIMM的一面或两面上。标准的DIMM的每一面有足够的空间容纳第9颗芯片，这第9颗芯片用来存储4bits或8bits的ECC</p>
<p>如果1根ECC DIMM的9颗芯片都位于DIMM的同一面，就叫做single-sided（单面）。如果9颗芯片分布在DIMM的两面，就叫做double-sided（双面）</p>
<p>1根 single-sided x8 ECC DIMM，和1根 double-sided x4 ECC DIMM，产生72bits数据(64bits data+8 bits ECC)。前者单面8颗芯片，后者双面，每面8颗共16颗芯片。两者都只用1个片选信号用来激活DIMM上的所有芯片。相反，1根 double-sided x8 DIMM 要求有2个片选信号来激活DIMM上的芯片来访问72-bit的block.</p>
<p>平台虽然一共有8个内存插槽，但是如果用了两对2GB double-rank的内存，就已经达到了8 rank的上限（2对，共4根内存，每根有两个rank)。这时，纵使还有4个内存插槽空着，也不能在往上升级，这才只有8GB的内存在使用。如果，换成4对2GB single-rank的内存，同样是达到8 rank的上限，可是内存容量却达到了16GB。</p>
</blockquote>
<ul>
<li><p>PC3-10600: DDR3-1333MHz</p>
<ul>
<li>其他常见的比如PC3-12800: DDR3-1600MHz</li>
</ul>
</li>
<li><p>E</p>
<ul>
<li>U: not ECC and not registered</li>
<li>E: stands for ECC (error correcting)</li>
<li>R: stands for Registered</li>
</ul>
<blockquote>
<p>reg 内存是带寄存器缓存的ECC内存，纯ECC内存不带reg功能</p>
</blockquote>
</li>
<li><p>其他数据标记:</p>
<ul>
<li>11: 内存颗粒的时延（Latency）数据, 越小越好</li>
</ul>
</li>
</ul>
<h3 id="主要技术"><a href="#主要技术" class="headerlink" title="主要技术"></a>主要技术</h3><ul>
<li>ECC: Error Checking and Correcting, 对应的中文名称就叫做”错误检查和纠正”, 从这个名称我们就可以看出它的主要功能就是”发现并纠正错误”, 它比奇偶校正技术更先进的方面主要在于它不仅能发现错误, 而且能纠正这些错误, 这些错误纠正之后计算机才能正确执行下面的任务, 确保服务器的正常运行</li>
<li>Chipkill技术是IBM公司为了解决服务器内存中ECC技术的不足而开发的，是一种新的ECC内存保护标准。</li>
<li>Register即寄存器或目录寄存器, 在内存上的作用我们可以把它理解成书的目录，有了它，当内存接到读写指令时，会先检索此目录，然后再进行读写操作，这将大大提高服务器内存工作效率。</li>
</ul>
<h3 id="Tips-1"><a href="#Tips-1" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>首选内存类型, DDR3起. 次选频率+容量, 记得兼顾主板/CPU兼容性</li>
</ul>
<h3 id="我挖到的-2"><a href="#我挖到的-2" class="headerlink" title="我挖到的"></a>我挖到的</h3><ul>
<li>hyinx 16GB 2Rx4 PC3-12800R</li>
</ul>
<h3 id="本节参考-2"><a href="#本节参考-2" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="http://m.elecfans.com/article/701149.html">DIMM被分为single-rank和double-rank</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/26255460">快速读懂内存条标签</a></li>
</ul>
<h2 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h2><h3 id="Tips-2"><a href="#Tips-2" class="headerlink" title="Tips"></a>Tips</h3><ul>
<li>一般而言，PMR比SMR（叠瓦）的机械硬盘性能好；</li>
<li>不建议购买3T以下的3.5寸机械硬盘，不建议购买2T以下的2.5寸机械硬盘；</li>
<li>HGST的硬盘一向很稳健；</li>
<li>希捷的8TB及以上大容量硬盘可靠性还不错；</li>
</ul>
<h3 id="我买到的"><a href="#我买到的" class="headerlink" title="我买到的"></a>我买到的</h3><p><a href="https://item.jd.com/2066790.html"><img src="tips-diy-pc/image-20201009004200903.png" alt="image-20201009004200903" style="zoom:50%;" /></a></p>
<h3 id="本节参考-3"><a href="#本节参考-3" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="https://www.zhihu.com/question/314396524/answer/618006107">PMR &amp; SMR</a></li>
<li><a href="https://www.smzdm.com/p/23790043/">最稳的机械硬盘</a></li>
</ul>
<h1 id="选配硬件"><a href="#选配硬件" class="headerlink" title="选配硬件"></a>选配硬件</h1><h2 id="机箱-amp-风扇-amp-电源"><a href="#机箱-amp-风扇-amp-电源" class="headerlink" title="机箱 &amp; 风扇 &amp; 电源"></a>机箱 &amp; 风扇 &amp; 电源</h2><blockquote>
<p>三件够用就行, 注意机箱隔音, 风扇静音, 不然就拖拉机突突突了..</p>
</blockquote>
<h2 id="显示器"><a href="#显示器" class="headerlink" title="显示器"></a>显示器</h2><h3 id="我挖到的-3"><a href="#我挖到的-3" class="headerlink" title="我挖到的"></a>我挖到的</h3><img src="tips-diy-pc/image-20201009002631592.png" alt="image-20201009002631592" style="zoom:50%;" />

<p>不好意思拿错了</p>
<img src="tips-diy-pc/image-20201009002811313.png" alt="image-20201009002811313" style="zoom:50%;" />

<h3 id="本节参考-4"><a href="#本节参考-4" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="https://post.smzdm.com/p/a785qpwl/">如何选购适合自己的显示器</a></li>
</ul>
<h2 id="键鼠"><a href="#键鼠" class="headerlink" title="键鼠"></a>键鼠</h2><h3 id="我买到的-1"><a href="#我买到的-1" class="headerlink" title="我买到的"></a>我买到的</h3><p><a href="https://item.jd.com/100009252062.html"><img src="tips-diy-pc/image-20201009003303805.png" alt="image-20201009003303805" style="zoom:30%;" /></a></p>
<h3 id="本节参考-5"><a href="#本节参考-5" class="headerlink" title="本节参考"></a>本节参考</h3><ul>
<li><a href="https://post.smzdm.com/p/adwrlm3z/?send_by=4746289796&from=other&invite_code=zdm6f9zf9qinv">0~1999元机械键盘入坑选购指南</a></li>
</ul>
<h1 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h1><h2 id="配置单"><a href="#配置单" class="headerlink" title="配置单"></a>配置单</h2><ul>
<li><p>￥530 三件套</p>
<ul>
<li>intel Xeon E5-2670 Sandy Bridge EP 2.60GHz 8核16线程</li>
<li>华南x79</li>
<li>海力士16g 2Rx4 PC3-12800R</li>
</ul>
</li>
<li><p>￥75 120G/SSD系统盘</p>
</li>
<li><p>￥471 东芝P300 3T/7200r/PMR/64MB</p>
</li>
<li><p>￥720 gtx1060 影驰虎将3g</p>
</li>
<li><p>￥30 铜管风扇</p>
</li>
<li><p>￥115 560W电源</p>
</li>
<li><p>￥75 机箱</p>
</li>
<li><p>￥209 RK RK932/红轴</p>
</li>
<li><p>￥290 <code>AOC P2491VW 24&#39;/ips/1080p/60Hz</code></p>
</li>
<li><p>￥90 淘宝上找个拷游戏/电影的店铺, 把机械硬盘的收货地写成店家那里, 拷完再给寄来.</p>
<blockquote>
<p>一般1T资源价格在￥100上下, 电影资源的话更贵, 因为<code>saldhg;khaskgh;klsd;sgkal&#39;vn;kfbg</code></p>
</blockquote>
</li>
</ul>
<p>总价530+75+471+720+30+115+75+209+290+90=2605</p>
<h3 id="跟淘宝爆款相比"><a href="#跟淘宝爆款相比" class="headerlink" title="跟淘宝爆款相比"></a>跟淘宝爆款相比</h3><ul>
<li>√<ul>
<li>CPU小升级, 电源功率放大了点, 其他的看不出来</li>
<li>主板看不出来, 都是x79, 半斤八两</li>
<li>N卡960/1050 -&gt; 1060, 其他的看不出来</li>
<li>内存DDR3 1600MHz, 还带Reg的ECC服务器内存, 淘宝爆款应该上不起DDR4的吧</li>
<li>散热1个大风扇 -&gt; 铜管+2风扇</li>
<li>3T的机械硬盘, 不然就五百G的游戏/电影怎么过瘾 <code>//心疼并瞟了一眼我的小破ps4(500G)</code></li>
<li>显示器好歹是个品牌(AOC), 闲鱼秒的, 预算再足一点的话 还想上<code>27&#39;/2k(4k)/144Hz</code>的AOC或者DELL</li>
<li>双模键鼠, 入门级红轴</li>
</ul>
</li>
<li>x<ul>
<li>机箱被小坑了下, 就多送个代装Win10, 省我2小时</li>
<li>SSD 120G还是个二手 比爆款(480G)差</li>
<li>500w电源大风扇, + CPU &amp; GPU的4个风扇, 机箱又不太给力..可接受范围内的嗡嗡嗡</li>
</ul>
</li>
</ul>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>其实三件套还能省下来小100</p>
<p>电源的话再猛点上额定400多w的, 省一半</p>
<p>机箱自己跑跑电脑城还能省20…后果是自己机箱走线</p>
<p>总共抠出来的这100多块钱, 就当首次装机的智商税吧</p>
<p>淘宝爆款, 卖2899, 我一套下来2605….emmm 一整天 294块, 不如我还是滚回去搬砖吧</p>
<blockquote>
<p>不过人总是这样, 转了个圈又回到原点, 环境没咋变, 人自己变了, 对吧?</p>
</blockquote>
]]></content>
      <categories>
        <category>杂记</category>
      </categories>
      <tags>
        <tag>杂记</tag>
        <tag>DIY</tag>
      </tags>
  </entry>
  <entry>
    <title>rabbitmq不访问web端清除队列</title>
    <url>/2020/07/tips-rabbitmqadmin-reset/</url>
    <content><![CDATA[<h2 id="rabbitmqadmin基础使用"><a href="#rabbitmqadmin基础使用" class="headerlink" title="rabbitmqadmin基础使用"></a>rabbitmqadmin基础使用</h2><ul>
<li><p>查看当前所有队列</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqadmin list queues name</span><br></pre></td></tr></table></figure>
</li>
<li><p>查看所有用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqadmin list users</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>结果如下</p>
<table>
<thead>
<tr>
<th align="left">name</th>
<th align="left">password_hash</th>
<th align="left">tags</th>
</tr>
</thead>
<tbody><tr>
<td align="left">guest</td>
<td align="left">1tfaOEC96lR3cvRXGN9W/CdCEgM=</td>
<td align="left">administrator</td>
</tr>
</tbody></table>
<ul>
<li>查看用户权限</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqadmin list permissions</span><br></pre></td></tr></table></figure>

<p>结果如下</p>
<table>
<thead>
<tr>
<th align="left">vhost</th>
<th align="left">configure</th>
<th align="left">read</th>
<th align="left">user</th>
<th align="left">write</th>
</tr>
</thead>
<tbody><tr>
<td align="left">/</td>
<td align="left">.*</td>
<td align="left">.*</td>
<td align="left">guest</td>
<td align="left">.*</td>
</tr>
</tbody></table>
<ul>
<li>查看host<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqadmin list vhosts</span><br></pre></td></tr></table></figure>

</li>
</ul>
<blockquote>
<p>一般无需修改</p>
</blockquote>
<h2 id="清除队列"><a href="#清除队列" class="headerlink" title="清除队列"></a>清除队列</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqctl stop_app</span><br><span class="line">rabbitmqctl reset    <span class="comment"># Be sure you really want to do this!</span></span><br><span class="line">rabbitmqctl start_app</span><br></pre></td></tr></table></figure>

<p>这样会导致所有用户的丢失, 需要重新添加用户和权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rabbitmqadmin <span class="built_in">declare</span> user name=<span class="string">&#x27;xxxx&#x27;</span> password=<span class="string">&#x27;xxxx&#x27;</span> tags=<span class="string">&#x27;administrator&#x27;</span></span><br><span class="line">rabbitmqadmin <span class="built_in">declare</span> permission vhost=<span class="string">&#x27;/&#x27;</span> user=<span class="string">&#x27;xxxx&#x27;</span> configure=<span class="string">&#x27;.*&#x27;</span> write=<span class="string">&#x27;.*&#x27;</span> <span class="built_in">read</span>=<span class="string">&#x27;.*&#x27;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>添加之前建议使用list命令看一下</p>
</blockquote>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>学习笔记</tag>
        <tag>Tips</tag>
        <tag>消息队列</tag>
      </tags>
  </entry>
  <entry>
    <title>DDOS简介</title>
    <url>/2020/08/tips-ddos/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><ul>
<li>DoS（Denial of Service）, 即拒绝服务攻击</li>
<li>分布式拒绝服务(DDoS:Distributed Denial of Service)攻击指借助于客户/服务器技术, 将多个计算机联合起来作为攻击平台, 对一个或多个目标发动DDoS攻击, 从而成倍地提高拒绝服务攻击的威力. </li>
<li>CC(ChallengeCollapsar)攻击者借助代理服务器生成指向受害主机的合法请求, 实现DDOS和伪装. DDoS是针对IP的攻击, 而CC攻击的是网页. </li>
<li>CC攻击的变异品种 慢速攻击: 对任何一个开放了HTTP访问的服务器HTTP服务器, 先建立了一个连接, 指定一个比较大的content-length, 然后以非常低的速度发包, 比如1-10s发一个字节, 然后维持住这个连接不断开. 如果客户端持续建立这样的连接, 那么服务器上可用的连接将一点一点被占满, 从而导致拒绝服务. </li>
</ul>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>慢速攻击主要利用的是thread-based架构的服务器的特性, 这种服务器会为每个新连接打开一个线程, 它会等待接收完整个HTTP头部才会释放连接. 比如Apache会有一个超时时间来等待这种不完全连接（默认是300s）, 但是一旦接收到客户端发来的数据, 这个超时时间会被重置. 正是因为这样, 攻击者可以很容易保持住一个连接, 因为攻击者只需要在即将超时之前发送一个字符, 便可以延长超时时间. 而客户端只需要很少的资源, 便可以打开多个连接, 进而占用服务器很多的资源. </p>
<p>经验证, Apache, httpd采用thread-based架构, 很容易遭受慢速攻击. 而另外一种event-based架构的服务器, 比如nginx和lighttpd则不容易遭受慢速攻击. </p>
<h2 id="攻击症状"><a href="#攻击症状" class="headerlink" title="攻击症状"></a>攻击症状</h2><p>一般遭受CC攻击时, Web服务器会出现80端口对外关闭的现象,  因为这个端口已经被大量的垃圾数据堵塞了正常的连接被中止了. 可以通过在命令行下输入命令netstat -an来查看, 　“SYN_RECEIVED”是TCP连接状态标志, 意思是“正在处于连接的初始同步状态 ”, 表明无法建立握手应答处于等待状态. 这就是攻击的特征, 一般情况下这样的记录一般都会有很多条, 表示来自不同的代理IP的攻击. </p>
<h2 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h2><h3 id="对DoS和DDoS的防范主要从下面几个方面考虑"><a href="#对DoS和DDoS的防范主要从下面几个方面考虑" class="headerlink" title="对DoS和DDoS的防范主要从下面几个方面考虑:"></a>对DoS和DDoS的防范主要从下面几个方面考虑:</h3><ol>
<li>尽可能对系统加载最新补丁, 并采取有效的合规性配置, 降低漏洞利用风险；</li>
<li>采取合适的安全域划分, 配置防火墙, 入侵检测和防范系统, 减缓攻击. </li>
<li>采用分布式组网, 负载均衡, 提升系统容量等可靠性措施, 增强总体服务能力. </li>
</ol>
<h3 id="可参考措施如下"><a href="#可参考措施如下" class="headerlink" title="可参考措施如下:"></a>可参考措施如下:</h3><ol>
<li>采用高性能的网络设备引<br>首先要保证网络设备不能成为瓶颈, 因此选择路由器, 交换机, 硬件防火墙等设备的时候要尽量选用知名度高,  口碑好的产品.  再就是假如和网络提供商有特殊关系或协议的话就更好了, 当大量攻击发生的时候请他们在网络接点处做一下流量限制来对抗某些种类的DDOS 攻击是非常有效的. </li>
<li>尽量避免 NAT 的使用<br>无论是路由器还是硬件防护墙设备要尽量避免采用网络地址转换 NAT 的使用,  因为采用此技术会较大降低网络通信能力, 其实原因很简单, 因为 NA T 需要对地址来回转换, 转换过程中需要对网络包的校验和进行计算, 因此浪费了很多 CPU 的时间, 但有些时候必须使用 NA T, 那就没有好办法了. </li>
<li>充足的网络带宽保证<br>网络带宽直接决定了能抗受攻击的能力,  假若仅仅有 10M 带宽的话,  无论采取什么措施都很难对抗当今的 SYNFlood 攻击,  至少要选择 100M 的共享带宽, 最好的当然是挂在1000M 的主干上了. 但需要注意的是, 主机上的网卡是 1000M 的并不意味着它的网络带宽就是千兆的,  若把它接在 100M 的交换机上,  它的实际带宽不会超过 100M,  再就是接在 100M的带宽上也不等于就有了百兆的带宽,  因为网络服务商很可能会在交换机上限制实际带宽为10M, 这点一定要搞清楚. </li>
<li>升级主机服务器硬件<br>在有网络带宽保证的前提下, 请尽量提升硬件配置, 要有效对抗<em>每秒 10 万个 SYN 攻击包, 服务器的配置至少应该为: P4 2.4G/DDR512M/SCSI-HD</em>, 起关键作用的主要是 CPU 和内存,  若有志强双 CPU 的话就用它吧,  内存一定要选择 DDR 的高速内存,  硬盘要尽量选择SCSI 的, 别只贪 IDE 价格不贵量还足的便宜, 否则会付出高昂的性能代价, 再就是网卡一定要选用 3COM 或 Intel 等名牌的, 若是 Realtek 的还是用在自己的 PC 上吧. </li>
<li>把网站做成<strong>静态页面</strong><br>大量事实证明, 把网站尽可能做成静态页面, 不仅能大大提高抗攻击能力, 而且还给黑客入侵带来不少麻烦, 至少到为止关于 HTML 的溢出还没出现, 新浪, 搜狐, 网易等门户网站主要都是静态页面,  若你非需要动态脚本调用,  那就把它弄到另外一台单独主机去, 免的遭受攻击时连累主服务器,  当然,  适当放一些不做数据库调用脚本还是可以的,  此外, 最好在需要调用数据库的脚本中拒绝使用代理的访问,  因为经验表明使用代理访问你网站的80%属于恶意行为. </li>
</ol>
<ul>
<li><p>网站架构<br>用户访问到的服务器仅用于前端, 仅运行着nginx用于反向代理. mariadb, apache与PHP已经迁走, 甚至zabbix proxy server也已经完成迁移. 因此, 用户访问到的页面都是缓存在本地的静态页面, 只会对带宽造成压力, 而后端依然坚挺.<br>后端运行着mariadb, Apache与PHP, 且为双节点热备模式<br>解决了双节点的文件, session与数字证书同步等问题.<br>最后, 所有静态文件都使用CDN进行分发, 减轻前端服务器的压力. </p>
</li>
<li><p>HttpGuard(运维工具)<br>说白了还是工具+验证码</p>
</li>
<li><p>iptables &amp; netstat &amp; iftop</p>
<p>  <code>iptables -I INPUT -p tcp --dport 80 -j DROP</code></p>
<ul>
<li><p>-I: 将规则插入到INPUT链的首行</p>
</li>
<li><p>-p: 匹配TCP协议</p>
</li>
<li><p>–dport: 首访端口为HTTP的80端口</p>
</li>
<li><p>-j: 将数据包丢弃</p>
<p><code>netstat -anp | grep TIME_WAIT | wc -l</code></p>
<p>最后是<code>iftop</code>, 一款实时展示网络连接情况的软件, 使用iftop命令打开展示界面后, 分别按下以下按键:</p>
</li>
<li><p>t: 在同一行内展示上下行情况, 节省空间</p>
</li>
<li><p>T: 展示总流量</p>
</li>
<li><p>p: 展示端口</p>
</li>
</ul>
</li>
<li><p>fail2ban（运维工具）</p>
</li>
<li><p>nginx limit_req</p>
</li>
<li><p>内核</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#修改超时时间为30秒, 某些情况可以进一步降低该值</span><br><span class="line">net.ipv4.tcp_fin_timeout &#x3D; 30</span><br><span class="line"></span><br><span class="line">#将keepalive的发送频率降低为20分钟一次</span><br><span class="line">net.ipv4.tcp_keepalive_time &#x3D; 1200</span><br><span class="line"></span><br><span class="line">#开启SYN Cookies, 当SYN队列溢出时启用Cookies</span><br><span class="line">net.ipv4.tcp_syncookies &#x3D; 1</span><br><span class="line"></span><br><span class="line">#开启TIME-WAIT sockets重用功能</span><br><span class="line">net.ipv4.tcp_tw_reuse &#x3D; 1</span><br><span class="line"></span><br><span class="line">#开启TIME-WAIT sockets快速回收功能</span><br><span class="line">net.ipv4.tcp_tw_recycle &#x3D; 1</span><br><span class="line"></span><br><span class="line">#加大SYN队列</span><br><span class="line">net.ipv4.tcp_max_syn_backlog &#x3D; 8192</span><br><span class="line"></span><br><span class="line">#最大TIME_WAIT保持数, 超过将全部清除</span><br><span class="line">net.ipv4.tcp_max_tw_buckets &#x3D; 5000</span><br></pre></td></tr></table></figure>

<h2 id="现有措施"><a href="#现有措施" class="headerlink" title="现有措施"></a>现有措施</h2><ol>
<li>nginx limit_req<blockquote>
<p>影响用户体验不推荐开启</p>
</blockquote>
</li>
<li>预约验证码</li>
<li>一秒操作不超过4次php</li>
<li>验证码登陆</li>
<li>单一登录</li>
</ol>
<h2 id="预计TODO"><a href="#预计TODO" class="headerlink" title="预计TODO"></a>预计TODO</h2><ol>
<li>前后端分离, 前端引入localstorage</li>
<li>服务分级, 瓶颈非io, 为tcpfpm</li>
</ol>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://baike.baidu.com/item/%E5%88%86%E5%B8%83%E5%BC%8F%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%94%BB%E5%87%BB/3802159?fromtitle=DDOS&fromid=444572&fr=aladdin">分布式拒绝服务攻击</a><br><a href="https://baike.baidu.com/item/cc%E6%94%BB%E5%87%BB/10959545?fr=aladdin">cc攻击</a><br><a href="http://www.cnblogs.com/wpjamer/p/9030259.html">CC攻击原理及防范方法</a><br><a href="https://ngx.hk/2018/04/17/%E8%AE%B0%E4%B8%80%E6%AC%A1%E8%A2%ABddos%E4%B8%8Ecc%E6%94%BB%E5%87%BB%E7%9A%84%E9%98%B2%E5%BE%A1%E7%BB%8F%E8%BF%87.html">记一次被DDOS与CC攻击的防御经过</a><br><a href="http://nginx.org/en/docs/http/ngx_http_limit_req_module.html">Module ngx_http_limit_req_module</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>学习笔记</tag>
        <tag>Tips</tag>
        <tag>web安全</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables入门</title>
    <url>/2020/06/tools-iptables/</url>
    <content><![CDATA[<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><p><code>iptables -t 表名 -nvL</code><br>表示查看表的所有规则, 并且在显示规则时, 不对规则中的IP或者端口进行名称反解, -n选项表示不解析IP地址.<br>表示查看表中的所有规则, 并且显示更详细的信息(-v选项)</p>
<p><code>iptables --line-numbers -t 表名 -L</code><br>表示查看表的所有规则, 并且显示规则的序号, –line-numbers选项表示显示规则的序号, 注意, 此选项为长选项, 不能与其他短选项合并, 不过此选项可以简写为–line, 注意, 简写后仍然是两条横杠, 仍然是长选项. </p>
<h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><p><code>iptables -t filter -A INPUT -s 192.168.1.146 -j DROP</code><br>在指定表的指定链的尾部添加一条规则, -A选项表示在对应链的末尾添加规则, 省略-t选项时, 表示默认操作filter表中的规则<br>在指定表的指定链的首部添加一条规则, -I选型表示在对应链的开头添加规则</p>
<p><code>iptables -t filter -I INPUT 5 -s 192.168.1.146 -j REJECT</code><br>在指定表的指定链的指定位置添加一条规则</p>
<h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p><code>iptables -t filter -P FORWARD ACCEPT</code><br>设置指定表的指定链的默认策略（默认动作）, 并非添加规则. </p>
<p><code>iptables -t filter -R INPUT 3 -s 192.168.1.146 -j ACCEPT</code><br>修改指定表中指定链的指定规则, -R选项表示修改对应链中的规则, 使用-R选项时要同时指定对应的链以及规则对应的序号, 并且规则中原本的匹配条件不可省略. </p>
<h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p><code>iptables -t filter -D INPUT 3</code><br>按照规则序号删除规则, 删除指定表的指定链的指定规则, -D选项表示删除对应链中的规则. </p>
<p><code>iptables -t filter -D INPUT -s 192.168.1.146 -j DROP</code><br>按照具体的匹配条件与动作删除规则, 删除指定表的指定链的指定规则. </p>
<p><code>iptables -t filter -F INPUT</code><br>删除指定表的指定链中的所有规则, -F选项表示清空对应链中的规则, 执行时需三思. </p>
<p><code>iptables -t filter -F</code><br>删除指定表中的所有规则, 执行时需三思. </p>
<h2 id="保存规则"><a href="#保存规则" class="headerlink" title="保存规则"></a>保存规则</h2><p><code>service iptables save</code><br>将iptables规则保存至/etc/sysconfig/iptables文件中, 如果对应的操作没有保存, 当重启iptables服务或者重启服务器以后, 我们平常添加的规则或者对规则所做出的修改都将消失</p>
<p><code>iptables-save</code><br>打印到屏幕</p>
<ul>
<li>centOS7<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 配置好yum源以后安装iptables-service</span></span><br><span class="line">yum install -y iptables-services</span><br><span class="line"><span class="comment"># 停止firewalld</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line"><span class="comment"># 禁止firewalld自动启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br><span class="line"><span class="comment"># 启动iptables</span></span><br><span class="line">systemctl start iptables</span><br><span class="line"><span class="comment"># 将iptables设置为开机自动启动, 以后即可通过iptables-service控制iptables服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> iptables</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h2><ul>
<li>如果想要iptables作为网络防火墙, iptables所在主机开启核心转发功能, 以便能够转发报文. </li>
<li>使用如下命令查看当前主机是否已经开启了核心转发, 0表示为开启, 1表示已开启<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure></li>
<li>使用如下两种方法均可临时开启核心转发, 立即生效, 但是重启网络配置后会失效.<br>方法一: <code>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</code><br>方法二: <code>sysctl -w net.ipv4.ip_forward=1</code></li>
<li>使用如下方法开启核心转发功能, 重启网络服务后永久生效.<br>配置<code>/etc/sysctl.conf</code>文件（centos7中配置<code>/usr/lib/sysctl.d/00-system.conf</code>文件）, 在配置文件中将 <code>net.ipv4.ip_forward</code>设置为1</li>
</ul>
<h2 id="命令实例"><a href="#命令实例" class="headerlink" title="命令实例"></a>命令实例</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">iptables -A PREROUTING  -t nat -p tcp -m tcp -s 10.2.9.119 -d 10.2.10.121 --dport 8888 -j DNAT --to-destination 172.19.2.222:80</span><br><span class="line">iptables -A FORWARD -d 172.19.2.222 -j ACCEPT</span><br><span class="line">iptables -A POSTROUTING -t nat -p tcp -m tcp -s 10.2.9.119 -d 172.19.2.222 --dport 80 -j SNAT --to-source 172.19.0.1</span><br><span class="line">iptables -A FORWARD -d 10.2.9.119 -j ACCEPT</span><br></pre></td></tr></table></figure>
<p> </p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.zsythink.net/archives/category/%e8%bf%90%e7%bb%b4%e7%9b%b8%e5%85%b3/iptables/">iptables</a><br><a href="http://xstarcd.github.io/wiki/Linux/iptables_forward_internetshare.html">通过iptables实现端口转发和内网共享上网</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>小工具</tag>
        <tag>Operation and maintenance</tag>
        <tag>系统安全</tag>
      </tags>
  </entry>
  <entry>
    <title>tools-mocha</title>
    <url>/2019/06/tools-mocha/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>所谓”测试框架”, 就是运行测试的工具. 通过它, 可以为JavaScript应用添加测试, 从而保证代码的质量. </p>
<blockquote>
<p>除了Mocha以外, 类似的测试框架还有Jasmine, Karma, Tape等</p>
</blockquote>
<ul>
<li>describe块称为”测试套件”（test suite）, 表示一组相关的测试. 它是一个函数, 第一个参数是测试套件的名称（”加法函数的测试”）, 第二个参数是一个实际执行的函数. </li>
<li>it块称为”测试用例”（test case）, 表示一个单独的测试, 是测试的最小单位. 它也是一个函数, 第一个参数是测试用例的名称（”1 加 1 应该等于 2”）, 第二个参数是一个实际执行的函数. </li>
<li>所有的测试用例（it块）都应该含有一句或多句的断言. 它是编写测试用例的关键. 断言功能由断言库来实现, Mocha本身不带断言库, 所以必须先引入断言库. </li>
</ul>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm isntall -g mocha</span><br><span class="line">mkdir test</span><br><span class="line">vi test&#x2F;balabala.js</span><br><span class="line">.&#x2F;node_modules&#x2F;mocha&#x2F;bin&#x2F;mocha</span><br></pre></td></tr></table></figure>

<h3 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">run &#39;mocha spec.js&#39;</span><br><span class="line">|</span><br><span class="line">spawn child process(产生子进程)</span><br><span class="line">|</span><br><span class="line">|--------------&gt; inside child process</span><br><span class="line">  process and apply options</span><br><span class="line">  |</span><br><span class="line">  run spec file&#x2F;s</span><br><span class="line">  |</span><br><span class="line">  |--------------&gt; per spec file</span><br><span class="line">    suite callbacks (e.g., &#39;describe&#39;)</span><br><span class="line">    |</span><br><span class="line">    &#39;before&#39; root-level pre-hook</span><br><span class="line">    |</span><br><span class="line">    &#39;before&#39; pre-hook</span><br><span class="line">    |</span><br><span class="line">    |--------------&gt; per test</span><br><span class="line">      &#39;beforeEach&#39; root-level pre-hook</span><br><span class="line">      |</span><br><span class="line">      &#39;beforeEach&#39; pre-hook</span><br><span class="line">      |</span><br><span class="line">      test callbacks (e.g., &#39;it&#39;)</span><br><span class="line">      |</span><br><span class="line">      &#39;afterEach&#39; post-hook</span><br><span class="line">      |</span><br><span class="line">      &#39;afterEach&#39; root-level post-hook</span><br><span class="line">    |&lt;-------------- per test end</span><br><span class="line">    |</span><br><span class="line">    &#39;after&#39; post-hook</span><br><span class="line">    |</span><br><span class="line">    &#39;after&#39; root-level post-hooks</span><br><span class="line">  |&lt;-------------- per spec file end</span><br><span class="line">|&lt;-------------- inside child process end</span><br></pre></td></tr></table></figure>

<h3 id="异步测试"><a href="#异步测试" class="headerlink" title="异步测试"></a>异步测试</h3><blockquote>
<p>Simply invoke the callback when your test is complete. By adding a callback (usually named done) to it(), Mocha will know that it should wait for this function to be called to complete the test. This callback accepts both an Error instance (or subclass thereof) or a falsy value; anything else will cause a failed test.<br>If you use callback-based async tests, Mocha will throw an error if done() is called multiple times. This is handy for catching accidental double callbacks.</p>
</blockquote>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><blockquote>
<p>Passing arrow functions (aka “lambdas”) to Mocha is discouraged.</p>
</blockquote>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mochajs.org/">mocha官网</a><br><a href="http://www.ruanyifeng.com/blog/2015/12/a-mocha-tutorial-of-examples.html">测试框架 Mocha 实例教程</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>Frontend</tag>
        <tag>JavaScript</tag>
        <tag>学习笔记</tag>
        <tag>小工具</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2019/05/tips-regxp/</url>
    <content><![CDATA[<h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><ul>
<li><code>(x)</code><blockquote>
<p>匹配 ‘x’ 并且记住匹配项, 就像下面的例子展示的那样. 括号被称为 捕获括号. </p>
</blockquote>
</li>
</ul>
<p>模式<code>/(foo) (bar) \1 \2/</code>中的 ‘<code>(foo)</code>‘ 和 ‘<code>(bar)</code>‘ 匹配并记住字符串 “foo bar foo bar” 中前两个单词. 模式中的 <code>\1</code> 和 <code>\2</code> 匹配字符串的后两个单词. 注意<code> \1</code>、<code>\2</code>、<code>\n</code> 是用在正则表达式的<strong>匹配环节</strong>. 在正则表达式的<strong>替换环节</strong>, 则要使用像 <code>$1</code>、<code>$2</code>、<code>$n</code>  这样的语法, 例如, ‘bar foo’.replace( /(…) (…)/, ‘$2 $1’ ). </p>
<ul>
<li><code>(?:x)</code><blockquote>
<p>匹配 ‘x’ 但是不记住匹配项. 这种叫作非捕获括号, 使得你能够定义为与正则表达式运算符一起使用的子表达式. </p>
</blockquote>
</li>
</ul>
<p>来看示例表达式 <code>/(?:foo)&#123;1,2&#125;/</code>. 如果表达式是 /foo{1,2}/, {1,2}将只对 ‘foo’ 的最后一个字符 ’o‘ 生效. 如果使用非捕获括号, 则{1,2}会匹配整个 ‘foo’ 单词. </p>
<ul>
<li><code>x(?=y)</code><blockquote>
<p>匹配’x’仅仅当’x’后面跟着’y’.这种叫做先行断言. </p>
</blockquote>
</li>
</ul>
<p>例如, <code>/Jack(?=Sprat)/</code>会匹配到’Jack’仅仅当它后面跟着’<code>Sprat</code>‘. <code>/Jack(?=Sprat|Frost)/</code>匹配‘Jack’仅仅当它后面跟着’Sprat’或者是‘Frost’. 但是‘Sprat’和‘Frost’都不是匹配结果的一部分. </p>
<ul>
<li><code>(?&lt;=y)x</code><blockquote>
<p>匹配’x’仅仅当’x’前面是’y’.这种叫做后行断言. </p>
</blockquote>
</li>
</ul>
<p>例如, <code>/(?&lt;=Jack)Sprat/</code>会匹配到’ Sprat ‘仅仅当它前面是’ Jack ‘. <code>/(?&lt;=Jack|Tom)Sprat/</code>匹配‘ Sprat ’仅仅当它前面是’Jack’或者是‘Tom’. 但是‘Jack’和‘Tom’都不是匹配结果的一部分. </p>
<ul>
<li><code>x(?!y)</code><blockquote>
<p>匹配’x’仅仅当’x’后面不跟着’y’,这个叫做正向否定查找. </p>
</blockquote>
</li>
</ul>
<p>例如, <code>/\d+(?!\.)/</code>匹配一个数字仅仅当这个数字后面没有跟小数点的时候. 正则表达式<code>/\d+(?!\.)/.exec(&quot;3.141&quot;)</code>匹配‘141’而不是‘3.141’</p>
<ul>
<li><code>(?&lt;!y)x</code><blockquote>
<p>（匹配x仅前面不跟着y）反向否定预查, 与正向否定预查类拟, 只是方向相反. </p>
</blockquote>
</li>
</ul>
<p>例如“<code>(?&lt;!95|98|NT|2000)Windows</code>”能匹配“<code>3.1Windows</code>”中的“Windows”, 但不能匹配“<code>2000Windows</code>”中的“Windows”. </p>
<ul>
<li><code>x|y</code><blockquote>
<p>匹配‘x’或者‘y’. </p>
</blockquote>
</li>
</ul>
<p>例如, <code>/green|red/</code>匹配“green apple”中的‘green’和“red apple”中的‘red’</p>
<h2 id="零宽断言"><a href="#零宽断言" class="headerlink" title="零宽断言"></a>零宽断言</h2><blockquote>
<p>零宽断言正如它的名字一样, 是一种零宽度的匹配, 它匹配到的内容不会保存到匹配结果中去, 最终匹配结果只是一个位置而已.<br>作用是给指定位置添加一个限定条件, 用来规定此位置之前或者之后的字符必须满足限定条件才能使正则中的字表达式匹配成功. </p>
</blockquote>
<ul>
<li><p><code>?=</code></p>
</li>
<li><p><code>?&lt;=</code></p>
</li>
<li><p><code>?!</code></p>
</li>
<li><p><code>?&lt;!</code></p>
</li>
<li><p>匹配过程例子</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var str&#x3D;&quot;abZW863ab88&quot;;</span><br><span class="line">var reg&#x3D;&#x2F;ab(?[A-Z])&#x2F;g;</span><br><span class="line">console.log(str.match(reg));</span><br></pre></td></tr></table></figure>
<p><img src="/2019/05/tips-regxp/1116285-20170322100053986-109250172.png" alt="1116285-20170322100053986-109250172"><br>首先由正则表达式的字符”a”获取控制权, 从位置0处开始匹配, 匹配字符”a”成功, 然后控制权转交给”b”, 从位置1处开始匹配, 配字符”b”成功, 然后控制权转交给”(?[A-Z])”, 它从位置2处开始匹配, 它要求所在位置的右边不能够是任意一个大写字母, 而位置的右边是大写字母”Z”,匹配失败, 然后控制权又重新交给字符”a”, 并从位置1处开始尝试, 匹配失败, 然后控制权再次交给字符”a”, 从位置2处开始尝试匹配, 依然失败, 如此往复尝试, 直到从位置7处开始尝试匹配成功, 然后将控制权转交给”b”,然后从位置8处开始尝试匹配, 匹配成功, 然后再将控制权转交给”(?[A-Z])”, 它从位置9处开始尝试匹配, 它规定它所在的位置右边不能够是大写字母, 匹配成功, 但是它并不会真正匹配ab后面的字符, 所以最终匹配结果是”ab”. </p>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions">正则表达式（不知道为啥少反向否定查找(?&lt;!y)x）</a><br><a href="http://tool.oschina.net/uploads/apidocs/jquery/regexp.html">正则表达式手册（这文档有点野）</a><br><a href="https://www.cnblogs.com/macq/p/6597366.html">断言的匹配解析（文档更野）</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>netcat linux命令</title>
    <url>/2019/05/tools-netcat/</url>
    <content><![CDATA[<blockquote>
<p>能通过TCP和UDP在网络中读写数据. 通过与其他工具结合和重定向, 你可以在脚本中以多种方式使用它.<br>netcat所做的就是在两台电脑之间建立链接并返回两个数据流</p>
</blockquote>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ul>
<li><p>端口扫描<br><code>nc -z -v -n 172.31.100.7 21-25</code></p>
<ul>
<li>z 参数告诉netcat使用0 IO,连接成功后立即关闭连接,  不进行数据交换</li>
<li>v 参数指使用冗余选项</li>
<li>n 参数告诉netcat 不要使用DNS反向查询IP地址的域名</li>
</ul>
</li>
<li><p>Chat Server</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: nc -l 1567</span><br><span class="line">Client: nc Server.IP 1567</span><br></pre></td></tr></table></figure>
<blockquote>
<p>netcat 命令在1567端口启动了一个tcp 服务器, 所有的标准输出和输入会输出到该端口. 输出和输入都在此shell中展示. </p>
</blockquote>
</li>
<li><p>文件传输</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Sender: nc -l 1567 &lt; file.txt</span><br><span class="line">Reciver: nc -n 172.31.100.7 1567 &gt; file.txt</span><br><span class="line"># 必要创建文件源作为Server, 我们也可以相反的方法使用</span><br><span class="line">Sender: nc -l 1567 &gt; file.txt</span><br><span class="line">Reciver: nc -n 172.31.100.7 1567 &lt; file.txt</span><br><span class="line"># 目录传输</span><br><span class="line">Sender: tar -cvf - dir_name | nc -l 1567</span><br><span class="line">Reciver: nc -n 172.31.100.7 1567 | tar -xvf -</span><br><span class="line"># 加密</span><br><span class="line">Sender: nc localhost 1567 | mcrypt –flush –bare -F -q -d -m ecb &gt; file.txt</span><br><span class="line">Reciver: mcrypt –flush –bare -F -q -m ecb &lt; file.txt | nc -l 1567</span><br><span class="line"># 流视频 我佛了. . . </span><br><span class="line">Sender: cat video.avi | nc -l 1567</span><br><span class="line">Reciver: nc 172.31.100.7 1567 | mplayer -vo x11 -cache 3000 -</span><br></pre></td></tr></table></figure></li>
<li><p>克隆一个设备</p>
<blockquote>
<p>已经安装配置一台Linux机器并且需要重复同样的操作对其他的机器, 而你不想在重复配置一遍. 不在需要重复配置安装的过程, 只启动另一台机器的一些引导可以克隆你的机器</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: dd if&#x3D;&#x2F;dev&#x2F;sda | nc -l 1567</span><br><span class="line">Client: nc -n 172.31.100.7 1567 | dd of&#x3D;&#x2F;dev&#x2F;sda</span><br></pre></td></tr></table></figure>
</li>
<li><p>打开一个shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: nc -l 1567 -e &#x2F;bin&#x2F;bash -i</span><br><span class="line">Client: nc 172.31.100.7 1567</span><br></pre></td></tr></table></figure>
<p>假如netcat 不支持-c 或者 -e 参数（openbsd netcat）,我们仍然能够创建远程shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server:</span><br><span class="line">$mkfifo &#x2F;tmp&#x2F;tmp_fifo</span><br><span class="line">$cat &#x2F;tmp&#x2F;tmp_fifo | &#x2F;bin&#x2F;sh -i 2&gt;&amp;1 | nc -l 1567 &gt; &#x2F;tmp&#x2F;tmp_fifo</span><br></pre></td></tr></table></figure>
<p>这里我们创建了一个fifo文件, 然后使用管道命令把这个fifo文件内容定向到shell 2&gt;&amp;1中. 是用来重定向标准错误输出和标准输出, 然后管道到netcat 运行的端口1567上. 至此, 我们已经把netcat的输出重定向到fifo文件中. </p>
<blockquote>
<p>说明:<br>从网络收到的输入写到fifo文件中<br>cat 命令读取fifo文件并且其内容发送给sh命令<br>sh命令进程受到输入并把它写回到netcat.<br>netcat 通过网络发送输出到client</p>
</blockquote>
</li>
<li><p>反向shell</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: nc -l 1567</span><br><span class="line">Client: nc 172.31.100.7 1567 -e &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>
<p>反向shell经常被用来绕过防火墙的限制, 如阻止入站连接. 例如, 我有一个专用IP地址为172.31.100.7, 我使用代理服务器连接到外部网络. 如果我想从网络外部访问 这台机器如1.2.3.4的shell, 那么我会用反向shell用于这一目的. </p>
</li>
<li><p>指定源端口</p>
<blockquote>
<p>假设你的防火墙过滤除25端口外其它所有端口, 你需要使用-p选项指定源端口. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: nc -l 1567</span><br><span class="line">Client: nc 172.31.100.7 1567 -p 25</span><br></pre></td></tr></table></figure>
</li>
<li><p>指定源地址</p>
<blockquote>
<p>假设你的机器有多个地址, 希望明确指定使用哪个地址用于外部数据通讯. 我们可以在netcat中使用-s选项指定ip地址. </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Server: nc -u -l 1567 &lt; file.txt</span><br><span class="line">Client: nc -u 172.31.100.7 1567 -s 172.31.100.5 &gt; file.txt</span><br></pre></td></tr></table></figure>
</li>
<li><p>其他</p>
<ul>
<li>使用-t选项模拟Telnet客户端</li>
<li>HTTP客户端用于下载文件</li>
<li>连接到邮件服务器, 使用SMTP协议检查邮件</li>
<li>使用ffmpeg截取屏幕并通过流式传输分享, 等等. </li>
</ul>
</li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.oschina.net/translate/linux-netcat-command?lang=chs&p=2">netcat命令</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>小工具</tag>
        <tag>Operation and maintenance</tag>
        <tag>性能监控</tag>
      </tags>
  </entry>
  <entry>
    <title>研发入职指引</title>
    <url>/2020/09/welcome-to-geneegroup-rd/</url>
    <content><![CDATA[<div id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容."><div class="hbe-input-container"><input type="password" id="hbePass" placeholder="您好, 这里需要密码." /><label>您好, 这里需要密码.</label><div class="bottom-line"></div></div><script id="hbeData" type="hbeData" data-hmacdigest="99a5544f0fa22235cdd6379dc2bdbb894f9134c4db10a8da7b8ac989c336c613"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Genee</category>
        <category>Tutor</category>
      </categories>
      <tags>
        <tag>genee</tag>
        <tag>tutor</tag>
      </tags>
  </entry>
  <entry>
    <title>netstat linux命令</title>
    <url>/2019/05/tools-netstat/</url>
    <content><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>Netstat 命令用于显示各种网络相关信息, 如网络连接, 路由表, 接口状态 (Interface Statistics), masquerade 连接, 多播成员 (Multicast Memberships) 等等. </p>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="输出信息含义"><a href="#输出信息含义" class="headerlink" title="输出信息含义"></a>输出信息含义</h3><p>从整体上看, netstat的输出结果可以分为两个部分:</p>
<p>一个是Active Internet connections, 称为有源TCP连接, 其中”Recv-Q”和”Send-Q”指%0A的是接收队列和发送队列. 这些数字一般都应该是0. 如果不是则表示软件包正在队列中堆积. 这种情况只能在非常少的情况见到. </p>
<p>另一个是Active UNIX domain sockets, 称为有源Unix域套接口(和网络套接字一样, 但是只能用于本机通信, 性能可以提高一倍).<br>Proto显示连接使用的协议,RefCnt表示连接到本套接口上的进程号,Types显示套接口的类型,State显示套接口当前的状态,Path表示连接到套接口的其它进程使用的路径名. </p>
<h4 id="状态说明"><a href="#状态说明" class="headerlink" title="状态说明"></a>状态说明</h4><p>LISTEN: 侦听来自远方的TCP端口的连接请求<br>SYN-SENT: 再发送连接请求后等待匹配的连接请求（如果有大量这样的状态包, 检查是否中招了）<br>SYN-RECEIVED: 再收到和发送一个连接请求后等待对方对连接请求的确认（如有大量此状态, 估计被flood攻击了）<br>ESTABLISHED: 代表一个打开的连接<br>FIN-WAIT-1: 等待远程TCP连接中断请求, 或先前的连接中断请求的确认<br>FIN-WAIT-2: 从远程TCP等待连接中断请求<br>CLOSE-WAIT: 等待从本地用户发来的连接中断请求<br>CLOSING: 等待远程TCP对连接中断的确认<br>LAST-ACK: 等待原来的发向远程TCP的连接中断请求的确认（不是什么好东西, 此项出现, 检查是否被攻击）<br>TIME-WAIT: 等待足够的时间以确保远程TCP接收到连接中断请求的确认<br>CLOSED: 没有任何连接状态</p>
<h3 id="常见参数"><a href="#常见参数" class="headerlink" title="常见参数"></a>常见参数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usage: netstat [-vWeenNcCF] [&lt;Af&gt;] -r         netstat &#123;-V|--version|-h|--help&#125;</span><br><span class="line">       netstat [-vWnNcaeol] [&lt;Socket&gt; ...]</span><br><span class="line">       netstat &#123; [-vWeenNac] -i | [-cnNe] -M | -s [-6tuw] &#125;</span><br><span class="line"></span><br><span class="line">        -r, --route              display routing table</span><br><span class="line">        -i, --interfaces         display interface table</span><br><span class="line">        -g, --groups             display multicast group memberships</span><br><span class="line">        -s, --statistics         display networking statistics (like SNMP)</span><br><span class="line">        -M, --masquerade         display masqueraded connections</span><br><span class="line"></span><br><span class="line">        -v, --verbose            be verbose</span><br><span class="line">        -W, --wide               don&#39;t truncate IP addresses</span><br><span class="line">        -n, --numeric            don&#39;t resolve names</span><br><span class="line">        --numeric-hosts          don&#39;t resolve host names</span><br><span class="line">        --numeric-ports          don&#39;t resolve port names</span><br><span class="line">        --numeric-users          don&#39;t resolve user names</span><br><span class="line">        -N, --symbolic           resolve hardware names</span><br><span class="line">        -e, --extend             display other&#x2F;more information</span><br><span class="line">        -p, --programs           display PID&#x2F;Program name for sockets</span><br><span class="line">        -o, --timers             display timers</span><br><span class="line">        -c, --continuous         continuous listing</span><br><span class="line"></span><br><span class="line">        -l, --listening          display listening server sockets</span><br><span class="line">        -a, --all                display all sockets (default: connected)</span><br><span class="line">        -F, --fib                display Forwarding Information Base (default)</span><br><span class="line">        -C, --cache              display routing cache instead of FIB</span><br><span class="line">        -Z, --context            display SELinux security context for sockets</span><br><span class="line"></span><br><span class="line">  &lt;Socket&gt;&#x3D;&#123;-t|--tcp&#125; &#123;-u|--udp&#125; &#123;-U|--udplite&#125; &#123;-S|--sctp&#125; &#123;-w|--raw&#125;</span><br><span class="line">           &#123;-x|--unix&#125; --ax25 --ipx --netrom</span><br><span class="line">  &lt;AF&gt;&#x3D;Use &#39;-6|-4&#39; or &#39;-A &lt;af&gt;&#39; or &#39;--&lt;af&gt;&#39;; default: inet</span><br><span class="line">  List of possible address families (which support routing):</span><br><span class="line">    inet (DARPA Internet) inet6 (IPv6) ax25 (AMPR AX.25)</span><br><span class="line">    netrom (AMPR NET&#x2F;ROM) ipx (Novell IPX) ddp (Appletalk DDP)</span><br><span class="line">    x25 (CCITT X.25)</span><br></pre></td></tr></table></figure>

<p>提示: LISTEN和LISTENING的状态只有用-a或者-l才能看到</p>
<p>-a或–all <strong>显示所有连线中的Socket. **<br>-A&lt;网络类型&gt;或–&lt;网络类型&gt; 列出该网络类型连线中的相关地址.<br>-c或–continuous 持续列出网络状态. 每隔一个固定时间, 执行该netstat命令.<br>-C或–cache 显示路由器配置的快取信息.<br>-e或–extend 显示网络其他相关信息. （uid等）<br>-F或–fib 显示FIB.<br>-g或–groups 显示多重广播功能群组组员名单.<br>-h或–help 在线帮助.<br>-i或–interfaces 显示网络界面信息表单.<br>-l或–listening **显示监控中的服务器的Socket. **<br>-M或–masquerade 显示伪装的网络连线.<br>-n或–numeric **拒绝显示别名, 能显示数字的全部转化成数字. (0.0.0.0:ssh -&gt; 0.0.0.0:22)</strong><br>-N或–netlink或–symbolic 显示网络硬件外围设备的符号连接名称.<br>-o或–timers 显示计时器.<br>-p或–programs **显示正在使用Socket的程序识别码和程序名称(PID/Program name). **<br>-r或–route **显示Routing Table. **<br>-s或–statistice **显示网络工作信息统计表. **<br>-t或–tcp **显示TCP传输协议的连线状况. **<br>-u或–udp **显示UDP传输协议的连线状况. **<br>-v或–verbose 显示指令执行过程.<br>-V或–version 显示版本信息.<br>-w或–raw 显示RAW传输协议的连线状况.<br>-x或–unix 此参数的效果和指定”-A unix”参数相同.<br>–ip或–inet 此参数的效果和指定”-A inet”参数相同. </p>
<h3 id="实用命令实例"><a href="#实用命令实例" class="headerlink" title="实用命令实例"></a>实用命令实例</h3><ul>
<li>显示 TCP 或 UDP 端口的统计信息 netstat -st 或 -su<br><code>netstat -st</code></li>
<li>TCP各种状态列表<br><code>netstat -an|awk &#39;/tcp/ &#123;print $6&#125;&#39;|sort|uniq -c</code></li>
<li>查看连接某服务端口最多的的IP地址<br><code>netstat -nat | grep &quot;192.168.1.15:22&quot; |awk &#39;&#123;print $5&#125;&#39;|awk -F: &#39;&#123;print $1&#125;&#39;|sort|uniq -c|sort -nr|head -20</code></li>
<li>显示核心路由信息<br><code>netstat -r</code></li>
<li>显示网络接口列表<br><code>netstat -i</code></li>
</ul>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.cnblogs.com/ggjucheng/archive/2012/01/08/2316661.html">Linux netstat命令详解</a><br><a href="http://www.cnblogs.com/peida/archive/2013/03/08/2949194.html">每天一个linux命令（56）: netstat命令</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>学习笔记</tag>
        <tag>小工具</tag>
        <tag>Operation and maintenance</tag>
        <tag>性能监控</tag>
      </tags>
  </entry>
  <entry>
    <title>JS中的prototype, __proto__与constructor</title>
    <url>/2019/05/tips-javascript-prototype/</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function Foo() &#123;...&#125;;</span><br><span class="line">let f1 &#x3D; new Foo();</span><br></pre></td></tr></table></figure>
<p><img src="/2019/05/tips-javascript-prototype/20190311194017886.png" alt="20190311194017886"></p>
<ul>
<li><p><code>__proto__</code>和constructor属性是对象所独有的</p>
</li>
<li><p>prototype属性是函数所独有的. </p>
</li>
<li><p><code>__proto__</code></p>
<ul>
<li>对象所独有的, 可以看到__proto__属性都是<strong>由一个对象指向一个对象</strong>, 即指向它们的原型对象</li>
<li>它的作用就是当访问一个对象的属性时, 如果该对象内部不存在这个属性, 那么就会去它的__proto__属性所指向的那个对象（可以理解为父对象）里找</li>
</ul>
</li>
<li><p><code>prototype</code></p>
<ul>
<li>prototype属性, 是函数所独有的, 它是从一个函数指向一个对象. </li>
<li>它的含义是函数的原型对象, 也就是这个函数（其实所有函数都可以作为构造函数）所创建的实例的原型对象, 由此可知: <code>f1.__proto__ === Foo.prototype</code></li>
<li>它的作用就是包含可以由特定类型的所有实例共享的属性和方法, 也就是让该函数所实例化的对象们都可以找到公用的属性和方法. </li>
</ul>
</li>
<li><p><code>constructor</code></p>
<ul>
<li>constructor属性也是对象才拥有的, 它是从一个对象指向一个函数, 含义就是指向该对象的构造函数</li>
<li>Function这个对象比较特殊, 它的构造函数就是它自己（因为Function可以看成是一个函数, 也可以是一个对象）, 所有函数和对象最终都是由Function构造函数得来</li>
</ul>
</li>
<li><p>其他</p>
<ul>
<li>每个对象都可以找到其对应的constructor, 因为创建对象的前提是需要有constructor, 而这个constructor可能是对象自己本身显式定义的或者通过__proto__在原型链中找到的. 而单从constructor这个属性来讲, 只有prototype对象才有. 通过函数创建的对象即使自己没有constructor属性, 它也能通过__proto__找到对应的constructor, 所以任何对象最终都可以找到其构造函数<br><img src="/2019/05/tips-javascript-prototype/20190311192013184.png" alt="20190311192013184"></li>
</ul>
</li>
</ul>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/cc18868876837/article/details/81211729">帮你彻底搞懂JS中的prototype, __proto__与constructor（图解）</a></p>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>Tips</category>
      </categories>
      <tags>
        <tag>Frontend</tag>
        <tag>JavaScript</tag>
        <tag>学习笔记</tag>
        <tag>Tips</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP-xdebug入门</title>
    <url>/2019/08/tools-php-xdebug/</url>
    <content><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://xdebug.org/wizard.php">选择xdebug版本</a></p>
<ul>
<li>下载, 侦测环境: wget, tar xzvf, phpize (<code>apt-get install php7.0-dev</code>)</li>
<li>编译: ./configure, make</li>
<li>安装: <code>cp modules/xdebug.so /usr/lib/php/20151012/.</code></li>
<li>开启模块: mods-envaliable &amp;&amp; phpenmod xdebug</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[XDebug]</span><br><span class="line">zend_extension &#x3D; &#x2F;usr&#x2F;lib&#x2F;php&#x2F;20151012&#x2F;xdebug.so</span><br><span class="line">xdebug.profiler_append &#x3D; 0</span><br><span class="line">xdebug.profiler_enable &#x3D; 1</span><br><span class="line">xdebug.profiler_enable_trigger &#x3D; 0</span><br><span class="line">xdebug.remote_enable &#x3D; 1</span><br><span class="line">xdebug.remote_mode &#x3D; &quot;req&quot;</span><br><span class="line">xdebug.remote_handler &#x3D; &quot;dbgp&quot;</span><br><span class="line">xdebug.remote_host &#x3D; &quot;192.168.5.1&quot;</span><br><span class="line">xdebug.remote_port &#x3D; 9001</span><br><span class="line">xdebug.idekey&#x3D;&quot;VSCODE&quot;</span><br><span class="line">xdebug.remote_autostart &#x3D; 1</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>VSCode: <code>vi .vscode/launch.json</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;version&quot;: &quot;0.2.0&quot;,</span><br><span class="line">    &quot;configurations&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Listen for XDebug&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;pathMappings&quot;: &#123;</span><br><span class="line">                &quot;&#x2F;vagrant&#x2F;www&quot;: &quot;$&#123;workspaceFolder&#125;&#x2F;www&#x2F;&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;port&quot;: 9000,</span><br><span class="line">            &quot;log&quot;: true,</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;Launch currently open script&quot;,</span><br><span class="line">            &quot;type&quot;: &quot;php&quot;,</span><br><span class="line">            &quot;request&quot;: &quot;launch&quot;,</span><br><span class="line">            &quot;program&quot;: &quot;$&#123;file&#125;&quot;,</span><br><span class="line">            &quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;,</span><br><span class="line">            &quot;port&quot;: 9000</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
        <category>小工具</category>
      </categories>
      <tags>
        <tag>Backend</tag>
        <tag>学习笔记</tag>
        <tag>小工具</tag>
        <tag>PHP</tag>
        <tag>xdebug</tag>
      </tags>
  </entry>
</search>
